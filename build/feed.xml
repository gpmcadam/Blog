<?xml version="1.0" encoding="utf-8" ?>
<rss version="2.0" xmlns:content="http://purl.org/rss/1.0/modules/content/" xmlns:wfw="http://wellformedweb.org/CommentAPI/" xmlns:dc="http://purl.org/dc/elements/1.1/" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>gary.mcad.am</title>
    <atom:link href="http://gary.mcad.am/feed.xml" rel="self" type="application/rss+xml"></atom:link>
    <link>http://gary.mcad.am</link>
    <description>I paid for this domain, I might aswell use it</description>
    <pubDate>Fri, 11 Dec 2015 02:10:23 +0000</pubDate>
    <generator>Wintersmith - https://github.com/jnordberg/wintersmith</generator>
    <language>en</language>
    <item>
      <title>Devember Day 10</title>
      <link>http://gary.mcad.am/articles/devember-10/</link>
      <pubDate>Fri, 11 Dec 2015 02:10:23 +0000</pubDate>
      <guid isPermaLink="true">http://gary.mcad.am/articles/devember-10/</guid>
      <author></author>
      <description>&lt;p&gt;On the move!&lt;span class=&quot;more&quot;&gt;&lt;/span&gt; I‚Äôm in a hotel tonight and I‚Äôve been out with a few friends so tonight I spent most of my time learning some more about &lt;a href=&quot;https://facebook.github.io/flux/&quot;&gt;Flux&lt;/a&gt;, an application architecture/development methodology which works with React, developed by Facebook &amp;ndash; something which seems more and more important as I delve deeper into React. I‚Äôll be spending time tonight and tomorrow to learning Flux and how to use it in my project. I‚Äôm also aware of &lt;a href=&quot;https://github.com/reflux/refluxjs&quot;&gt;Reflux&lt;/a&gt;, which I‚Äôll be giving some attention to, and trying to determine which to go with.&lt;/p&gt;
&lt;div class=&quot;img-responsive img-lg&quot;&gt;
    &lt;img src=&quot;/articles/devember-10/reflux.gif&quot; alt=&quot;&quot;&gt;
&lt;/div&gt;

&lt;p&gt;It bothers me that I‚Äôm spending more time on learning these things than getting my hands dirty, but I‚Äôve gotten to the point where I‚Äôm so unsure what to do next that I think taking a step back is needed, and hopefully I can push on after this.&lt;/p&gt;
&lt;p&gt;I‚Äôm using &lt;a href=&quot;https://egghead.io/lessons/react-development-environment-setup?series=react-flux-architecture&quot;&gt;a great series of videos on egghead.io&lt;/a&gt; for my initial research. So no commits tonight! Christmas party tomorrow, so I‚Äôm guessing no commits then, either! Hopefully I‚Äôll come out the other side knowing a lot more about Flux and being in a better position to move my app forward. (And ideally not very hungover!)&lt;/p&gt;
&lt;h2 id=&quot;today-s-observations&quot;&gt;Today‚Äôs Observations&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;Hotel WiFi is better! ¬£3 for 24 hrs though! :(&lt;/li&gt;
&lt;li&gt;Stats for today: 0 commits, time spent 1h 30m&lt;/li&gt;
&lt;/ul&gt;
</description>
    </item>
    <item>
      <title>Devember Day 9</title>
      <link>http://gary.mcad.am/articles/devember-09/</link>
      <pubDate>Thu, 10 Dec 2015 00:44:08 +0000</pubDate>
      <guid isPermaLink="true">http://gary.mcad.am/articles/devember-09/</guid>
      <author></author>
      <description>&lt;p&gt;Argggggggh!!!&lt;span class=&quot;more&quot;&gt;&lt;/span&gt;&lt;/p&gt;
&lt;div class=&quot;img-responsive img-md&quot;&gt;
    &lt;img src=&quot;/articles/devember-09/not.gif&quot; alt=&quot;&quot;&gt;
&lt;/div&gt;

&lt;p&gt;Too much time spent farting around trying to understand topics associated with React. Search terms today include: flux, reflux, react+backbone, backbone es6, backbone router es6, backbone react browserify ‚Ä¶ etc. etc.&lt;/p&gt;
&lt;p&gt;Taking on too much? Need to commit more time than I have in an evening to properly understanding Flux and how to integrate it with React and maybe Backbone. Maybe I‚Äôll just delete everything and start again?&lt;/p&gt;
&lt;p&gt;Everyone has an opinion on how to do this, the community is chaotic right now. There‚Äôs a solution in here somewhere, and I can taste it. The key will be understanding Flux, I feel.&lt;/p&gt;
&lt;h2 id=&quot;today-s-observations&quot;&gt;Today‚Äôs Observations&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;Out travelling for 2 nights, hoping for better hotel WiFi&lt;/li&gt;
&lt;li&gt;Out at work‚Äôs Christmas party on Friday night &amp;ndash; that‚Äôll be a fun thing to code after! üéÖ üçª&lt;/li&gt;
&lt;li&gt;Stats for today: 0 commit, time spent 1h 30m 02s&lt;/li&gt;
&lt;/ul&gt;
</description>
    </item>
    <item>
      <title>Devember Day 8</title>
      <link>http://gary.mcad.am/articles/devember-08/</link>
      <pubDate>Wed, 09 Dec 2015 01:31:52 +0000</pubDate>
      <guid isPermaLink="true">http://gary.mcad.am/articles/devember-08/</guid>
      <author></author>
      <description>&lt;p&gt;Experimenting with React and &lt;a href=&quot;https://visionmedia.github.io/page.js/&quot;&gt;Page.js&lt;/a&gt;&lt;span class=&quot;more&quot;&gt;&lt;/span&gt;, an interesting micro client-side aimed at making the process of routing easier without the weight of an MVC framework.&lt;/p&gt;
&lt;p&gt;What I fear I‚Äôm in danger of doing, however, is solving the ‚ÄòV‚Äô part of MVC with React, and the ‚ÄòC‚Äô part with Page.js. I‚Äôm handling the ‚ÄòM‚Äô with AJAX and my API, so maybe I‚Äôm just cobbling together a franken-framework, of sorts?&lt;/p&gt;
&lt;div class=&quot;img-responsive img-lg&quot;&gt;
    &lt;img src=&quot;/articles/devember-08/monster.gif&quot; alt=&quot;&quot;&gt;
&lt;/div&gt;

&lt;p&gt;Anyway, the experiment has been worthwhile. Page.js is a nifty little tool and it‚Äôs introducing routing to React has give me more control over my component rendering and organisation.&lt;/p&gt;
&lt;p&gt;I‚Äôm having some issues with passing session information around now, and I wonder if I‚Äôm coming at this with my PHP-trained-brain, rather than trying to think in React. Right now I‚Äôm working with &lt;a href=&quot;https://www.npmjs.com/package/react-cookie&quot;&gt;react-cookie&lt;/a&gt; to help solve this, but I‚Äôm chasing myself around a bit in terms of how to handle state on various ‚Äúpages‚Äù (basically a React component being rendered to a parent component.)&lt;/p&gt;
&lt;p&gt;I do wonder whether, at this point, the maturity of something like Angular, Knockout or Backbone might be more useful. Something which I‚Äôll experiment with tomorrow and then make a final decision.&lt;/p&gt;
&lt;h2 id=&quot;today-s-observations&quot;&gt;Today‚Äôs Observations&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;Stats for today: 1 new branch, 1 commit, time spent 1h 56m 33s&lt;/li&gt;
&lt;/ul&gt;
</description>
    </item>
    <item>
      <title>Devember Day 7</title>
      <link>http://gary.mcad.am/articles/devember-07/</link>
      <pubDate>Tue, 08 Dec 2015 00:55:09 +0000</pubDate>
      <guid isPermaLink="true">http://gary.mcad.am/articles/devember-07/</guid>
      <author></author>
      <description>&lt;p&gt;One week in.&lt;span class=&quot;more&quot;&gt;&lt;/span&gt;&lt;/p&gt;
&lt;div class=&quot;img-responsive img-lg&quot;&gt;
    &lt;img src=&quot;/articles/devember-07/calendar.gif&quot; alt=&quot;&quot;&gt;
&lt;/div&gt;

&lt;p&gt;I‚Äôve logged 12 hours so far over 7 days. So far it‚Äôs gone OK and I‚Äôm more happy with what I‚Äôve learned in this time than the results I‚Äôve been able to produce.&lt;/p&gt;
&lt;p&gt;I feel like I‚Äôve gone from knowing only very little about React &amp;ndash; and next to nothing about Gulp, Babel, Browserify and ES6 &amp;ndash; and now I‚Äôve got a good hold on the basics and a structure for a demo for this web app.&lt;/p&gt;
&lt;p&gt;We‚Äôre just under 1/4 of the way through Devember and I feel like the next 7 days will be telling in terms of how quickly I‚Äôm hoping to get a fully working prototype of the app. I may have to sacrifice some functionality to get there.&lt;/p&gt;
&lt;p&gt;Today I spent some time polishing the UI of the landing page and introducing some animation with the awesome &lt;a href=&quot;https://daneden.github.io/animate.css/&quot;&gt;animate.css&lt;/a&gt; project. Tomorrow, I‚Äôm going to hopefully spend some time investigating routing options for a single page app in React. I‚Äôve looked very briefly at &lt;a href=&quot;https://github.com/rackt/react-router&quot;&gt;react-router&lt;/a&gt; but I‚Äôm not 100% sure if it‚Äôs what I need. Needs more thought!&lt;/p&gt;
&lt;h2 id=&quot;today-s-observations&quot;&gt;Today‚Äôs Observations&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;Odd hours meant I lost a github streak that would‚Äôve lasted 31 days hopefully &lt;code&gt;:(&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;The differences between SASS and LESS (other than syntax) aren‚Äôt that obvious to me yet, although compile time seems a lot quicker (anecdotally). Still waiting to discover the ‚Äúkiller feature‚Äù which separates the two.&lt;/li&gt;
&lt;li&gt;Stats for today: 1 commit, time spent 1h 37m 32s&lt;/li&gt;
&lt;/ul&gt;
</description>
    </item>
    <item>
      <title>Devember Day 6</title>
      <link>http://gary.mcad.am/articles/devember-06/</link>
      <pubDate>Mon, 07 Dec 2015 01:32:58 +0000</pubDate>
      <guid isPermaLink="true">http://gary.mcad.am/articles/devember-06/</guid>
      <author></author>
      <description>&lt;p&gt;Today I decided to tackle the issue of having Browserify bundle my React/Babel/etc. files in less than 30 seconds.&lt;span class=&quot;more&quot;&gt;&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;And the results are in!&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;[01:26:13] Using gulpfile ~/Documents/Development/Bloon/gulpfile.js
[01:26:13] Starting &amp;#39;js&amp;#39;...
[01:26:13] Starting &amp;#39;sass&amp;#39;...
[01:26:13] Finished &amp;#39;sass&amp;#39; after 17 ms
[01:26:21] 2537121 bytes written (7.91 seconds)
[01:26:21] Finished &amp;#39;js&amp;#39; after 7.99 s
[01:26:21] Starting &amp;#39;default&amp;#39;...
[01:26:21] Finished &amp;#39;default&amp;#39; after 17 Œºs
&lt;/code&gt;&lt;/pre&gt;&lt;div class=&quot;img-responsive img-md&quot;&gt;
&lt;img src=&quot;/articles/devember-06/yay.gif&quot; alt=&quot;&quot;&gt;
&lt;/div&gt;

&lt;p&gt;&lt;em&gt;Woo!&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;OK so 8s still isn‚Äôt ideal. But it‚Äôs a lot better than 30. I can deal with that right now.&lt;/p&gt;
&lt;h2 id=&quot;introducing-watchify&quot;&gt;Introducing Watchify&lt;/h2&gt;
&lt;p&gt;After some digging, it turns out that the creators of Browserify, in realizing how slow Browserify can be, released &lt;a href=&quot;https://github.com/substack/watchify&quot;&gt;Watchify&lt;/a&gt; which helps to speed up the process‚Ä¶ go figure.&lt;/p&gt;
&lt;p&gt;My gulp file is now a mess, so I‚Äôm going to investigate some ways to clean it up by writing my tasks as modules &amp;ndash; but that‚Äôs enough fiddling with gulp for now, the current gulp file should do for now as I‚Äôm hoping to get back to the actual job tomorrow evening.&lt;/p&gt;
&lt;h2 id=&quot;today-s-observations&quot;&gt;Today‚Äôs Observations&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;The auxiliary stuff surrounding development, such as setting up task runners and debugging them, tweaking them, is in my opinion the most tedious aspect of the job. I wish I could just remove it entirely.&lt;/li&gt;
&lt;li&gt;Stats for today: 1 commit, time spent 1h 20m 31s&lt;/li&gt;
&lt;/ul&gt;
</description>
    </item>
    <item>
      <title>Devember Day 5</title>
      <link>http://gary.mcad.am/articles/devember-05/</link>
      <pubDate>Sun, 06 Dec 2015 02:34:23 +0000</pubDate>
      <guid isPermaLink="true">http://gary.mcad.am/articles/devember-05/</guid>
      <author></author>
      <description>&lt;p&gt;Checking in from a hotel, still managed to get some stuff done! &lt;span class=&quot;more&quot;&gt;&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;After a night out drinking with a client from work, I wasn‚Äôt sure how functional I‚Äôd be (I have another family-related festive social gathering tomorrow so I‚Äôve tried to stay as un-drunk as I can in anticipation of that).&lt;/p&gt;
&lt;p&gt;However, I‚Äôve managed to stay awake and bring my laptop along to the hotel we‚Äôre staying at to check in.&lt;/p&gt;
&lt;p&gt;Not a very productive hour, touching up some of the UI and mostly waiting for my gulp tasks to run (30s per run now) &amp;ndash; tomorrow‚Äôs priority will &lt;em&gt;have&lt;/em&gt; to be to investigate making 
this more efficient!&lt;/p&gt;
&lt;div class=&quot;img-responsive img-xl img-cap&quot;&gt;
&lt;img src=&quot;/articles/devember-05/waiting.gif&quot; alt=&quot;&quot;&gt;
&lt;em&gt;Literally me irl sat in the hotel waiting 30s per build in gulp&lt;/em&gt;
&lt;/div&gt;

&lt;h2 id=&quot;today-s-observations&quot;&gt;Today‚Äôs Observations&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;Pizza + Beer + Coding = Fun! Someone should do this with more coordination on a larger scale‚Ä¶&lt;/li&gt;
&lt;li&gt;Premier Inn offer a free WiFi but it‚Äôs limited to 20 KB/s down, conveniently there‚Äôs an unlimited version of the exact same WiFi available for ¬£5 for 24 hrs. Robbery. &lt;a href=&quot;http://www.reddit.com/r/firstworldproblems/&quot;&gt;#firstworldproblems&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;Stats for today: 1 commit, time spent 48 mins&lt;/li&gt;
&lt;/ul&gt;
</description>
    </item>
    <item>
      <title>Devember Day 4</title>
      <link>http://gary.mcad.am/articles/devember-04/</link>
      <pubDate>Sat, 05 Dec 2015 03:54:13 +0000</pubDate>
      <guid isPermaLink="true">http://gary.mcad.am/articles/devember-04/</guid>
      <author></author>
      <description>&lt;p&gt;Up late again, toying with ES6+React.&lt;span class=&quot;more&quot;&gt;&lt;/span&gt; Still
spending some time getting to grips with the details of React, but I‚Äôve
managed to add some complexity.&lt;/p&gt;
&lt;p&gt;I‚Äôve also expanded on my gulpfile, learned more about gulp in general
and spent a lot of time watching my stuff build &amp;ndash; Browserify can take
a while to build!&lt;/p&gt;
&lt;div class=&quot;img-responsive img-md img-border&quot;&gt;
    &lt;img src=&quot;/articles/devember-04/waiting.gif&quot; alt=&quot;&quot;&gt;
&lt;/div&gt;

&lt;h2 id=&quot;moving-forward-with-react&quot;&gt;Moving Forward with React&lt;/h2&gt;
&lt;p&gt;I‚Äôve now managed to get a bit further with React, and I‚Äôm starting to
generate a slightly more complicated structure to my app. I now have 6-7
components and I‚Äôm doing some re-rendering based on events.&lt;/p&gt;
&lt;p&gt;I‚Äôm not sure if this is the best way to handle the process, or I should simply
let the browser redraw the page. This is something I‚Äôll experiment with going
forward.&lt;/p&gt;
&lt;h2 id=&quot;gulp-newer-vs-gulp-changed&quot;&gt;gulp-newer vs gulp-changed&lt;/h2&gt;
&lt;p&gt;As someone who always preferred using &lt;code&gt;grunt-newer&lt;/code&gt; for my build processes,
moving to gulp was tricky. The community seems to prefer watch tasks.&lt;/p&gt;
&lt;p&gt;After comparing two packages, &lt;strong&gt;gulp-newer&lt;/strong&gt; and &lt;strong&gt;gulp-changed&lt;/strong&gt;, I‚Äôve
settled on &lt;strong&gt;gulp-newer&lt;/strong&gt; as it allows you to check both 1:1 and many:1
differences.&lt;/p&gt;
&lt;h2 id=&quot;gulp-build-time-with-browserify&quot;&gt;Gulp Build Time with Browserify&lt;/h2&gt;
&lt;p&gt;I‚Äôm still struggling with a very very slow build time, around ~25s per build.&lt;/p&gt;
&lt;p&gt;This is due to the bundling of all files with Browserify, so I‚Äôm going to
investigate how to lower this down. Thankfully using &lt;strong&gt;gulp-newer&lt;/strong&gt; means this
will only run on any changes to my React, but still, it‚Äôs clumsy.&lt;/p&gt;
&lt;p&gt;Also, as an aside, I need to figure out how to properly pipe Browserify through
gulp, as my build output claims that gulp has finished compiling my JS before
Browserify actually starts. Bit odd.&lt;/p&gt;
&lt;h2 id=&quot;today-s-observations&quot;&gt;Today‚Äôs Observations&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;DEVEMBER BONUS!&lt;/strong&gt; I‚Äôve spent some extra time this evening writing a small utility 
to help &lt;a href=&quot;http://gary.mcad.am/articles/vagrant-up&quot;&gt;manage vagrant machines a little better&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;Busy weekend planned, I‚Äôm going to try and get Day 5 done before going out, otherwise
I guess I‚Äôm taking my laptop with me for some alcohol induced coding!&lt;/li&gt;
&lt;li&gt;Stats for today: 1 commit, time spent 2h 57m 18s&lt;/li&gt;
&lt;/ul&gt;
</description>
    </item>
    <item>
      <title>Vagrant-Up</title>
      <link>http://gary.mcad.am/articles/vagrant-up/</link>
      <pubDate>Sat, 05 Dec 2015 03:53:40 +0000</pubDate>
      <guid isPermaLink="true">http://gary.mcad.am/articles/vagrant-up/</guid>
      <author></author>
      <description>&lt;p&gt;Do you run 1 vagrant machine at a time?&lt;span class=&quot;more&quot;&gt;&lt;/span&gt; Do you switch vagrant machines a lot? Is this frustrating for you?&lt;/p&gt;
&lt;p&gt;Well you should use &lt;a href=&quot;https://packagist.org/packages/gpmcadam/vagrant-up&quot;&gt;vagrant-up&lt;/a&gt; &amp;ndash; a lightweight utility to help manage one vagrant box at a time.&lt;/p&gt;
&lt;h2 id=&quot;installation&quot;&gt;Installation&lt;/h2&gt;
&lt;p&gt;Install via Composer:&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;$ composer global require gpmcadam/vagrant-up
&lt;/code&gt;&lt;/pre&gt;&lt;h2 id=&quot;usage&quot;&gt;Usage&lt;/h2&gt;
&lt;p&gt;After installation, simply run &lt;code&gt;vagrant-up&lt;/code&gt; in the directory of the vagrant box you want to bring up, and all other running vagrant machines will be suspended before bringing your desired machine up.&lt;/p&gt;
&lt;p&gt;Nifty, ey?!&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;/articles/vagrant-up/hat-wobble.gif&quot; alt=&quot;&quot;&gt;&lt;/p&gt;
</description>
    </item>
    <item>
      <title>Devember Day 3</title>
      <link>http://gary.mcad.am/articles/devember-03/</link>
      <pubDate>Thu, 03 Dec 2015 23:42:44 +0000</pubDate>
      <guid isPermaLink="true">http://gary.mcad.am/articles/devember-03/</guid>
      <author></author>
      <description>&lt;p&gt;I &amp;lt;3 React! &lt;span class=&quot;more&quot;&gt;&lt;/span&gt; Seriously, it‚Äôs great.&lt;/p&gt;
&lt;div class=&quot;img-responsive img-sm img-border&quot;&gt;
    &lt;img src=&quot;/articles/devember-03/tayne.gif&quot; alt=&quot;&quot;&gt;
&lt;/div&gt;

&lt;p&gt;It mixes really well with ES6, and while it takes a while to understand
the nuances, once you get to grips with it &amp;ndash; even a little &amp;ndash;
it pays off.&lt;/p&gt;
&lt;p&gt;Today was a very productive hour, which started with me reluctantly
opening my laptop in bed. I wasn‚Äôt very excited to carry on after
&lt;a href=&quot;http://gary.mcad.am/articles/devember-02&quot;&gt;last night‚Äôs fiasco&lt;/a&gt;, but I‚Äôve made up for it today I think.&lt;/p&gt;
&lt;p&gt;I‚Äôve not got a &lt;em&gt;huge&lt;/em&gt; amount done (just one small commit) but what‚Äôs
there has lead me to learn a lot about React and ES6.&lt;/p&gt;
&lt;h2 id=&quot;mocking-with-lumen&quot;&gt;Mocking with Lumen&lt;/h2&gt;
&lt;p&gt;&lt;a href=&quot;http://lumen.laravel.com&quot;&gt;Lumen&lt;/a&gt; (or rather Laravel, really) allows for very quick mocking of API
in the &lt;strong&gt;app/routes.php&lt;/strong&gt; file. I‚Äôve got a simple API structure up and
running to serve out the data for the user profile selector: &lt;/p&gt;
&lt;pre&gt;&lt;code&gt;$app-&amp;gt;group([&amp;#39;prefix&amp;#39; =&amp;gt; &amp;#39;api/profile&amp;#39;], function () use ($app) {
    $app-&amp;gt;get(&amp;#39;/&amp;#39;, function() use($app) {
        return response()-&amp;gt;json([
                &amp;#39;profiles&amp;#39; =&amp;gt; [
                    [
                        &amp;#39;id&amp;#39; =&amp;gt; 1,
                        &amp;#39;name&amp;#39; =&amp;gt; &amp;#39;Arya&amp;#39;
                    ],
                    [
                        &amp;#39;id&amp;#39; =&amp;gt; 2,
                        &amp;#39;name&amp;#39; =&amp;gt; &amp;#39;Brandon&amp;#39;
                    ]
                ]
            ]);
    });
});
&lt;/code&gt;&lt;/pre&gt;&lt;h2 id=&quot;reactive-components&quot;&gt;Reactive Components&lt;/h2&gt;
&lt;p&gt;I now have a simple component structure set up in react, and I‚Äôm
rendering my profile selector like so:&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;// Bloon/ProfileSelect.jsx
import React from &amp;#39;react&amp;#39;;
import $ from &amp;#39;jquery&amp;#39;;
import Profile from &amp;#39;./Profile&amp;#39;;

class ProfileSelect extends React.Component {

    /**
     * ProfileSelect Constructor
     */
    constructor(props) {
        super(props)
        this.mounted = false;
        this.state = { profiles: [] };
    }

    /**
     * componentDidMount event handler - fetches
     * the component state via AJAX
     */
    componentDidMount() {
        this.mounted = true;
        Promise.resolve(
            $.get(&amp;#39;/api/profile/&amp;#39;)
        )
        .then(function(data) {
            if (this.mounted === true) {
                this.setState({
                    profiles: data.profiles
                })
            }
        }.bind(this))
        .catch(function(err) {
            console.log(err);
        });
    }

    /**
     * componentWillUnmount event handler
     */
    componentWillUnmount() {
        this.state = {};
        this.mounted = false;
    }

    /**
     * render handler
     */
    render() {
        return (
            &amp;lt;section className=&amp;quot;profiles&amp;quot;&amp;gt;{
                this.state.profiles.map(profile =&amp;gt; &amp;lt;Profile key={profile.id} profile={profile} /&amp;gt;)
            }
            &amp;lt;/section&amp;gt;
        )
    }
}

export default ProfileSelect;
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;In the above snippet, we consume our API method and keep
track of our component mount state. This means our
component state is handled asynchronously and allows it
to re-render cleanly whenever the AJAX returns.&lt;/p&gt;
&lt;p&gt;I‚Äôm not sure how efficient this is in the long term, I‚Äôll need
to investigate ways to streamline the access of the data from
our PHP backend to React.&lt;/p&gt;
&lt;p&gt;The thing I was most excited to discover is in our render function:&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;render() {
    return (
        &amp;lt;section className=&amp;quot;profiles&amp;quot;&amp;gt;{
            this.state.profiles.map(profile =&amp;gt; &amp;lt;Profile key={profile.id} profile={profile} /&amp;gt;)
        }
        &amp;lt;/section&amp;gt;
    )
}
&lt;/code&gt;&lt;/pre&gt;&lt;div class=&quot;img-responsive img-md img-cap&quot; &gt;
    &lt;img src=&quot;/articles/devember-03/tasty.gif&quot; alt=&quot;&quot;&gt;
    &lt;em&gt;Tasty!&lt;/em&gt;
&lt;/div&gt;


&lt;p&gt;This is just &lt;em&gt;beautiful&lt;/em&gt; to me. In short, we render our
component as an HTML section element, and inside it
we map each of the profiles returning a Profile component.&lt;/p&gt;
&lt;p&gt;We do this so cleanly using &lt;a href=&quot;https://strongloop.com/strongblog/an-introduction-to-javascript-es6-arrow-functions/&quot;&gt;ES6 arrow functions&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;And our Profile component looks like this:&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;// Bloon/Profile.jsx
import React from &amp;#39;react&amp;#39;;

class Profile extends React.Component {
    render() {
        return &amp;lt;div&amp;gt;{this.props.profile.name}&amp;lt;/div&amp;gt;
    }
}

export default Profile;
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;In Chrome, using &lt;a href=&quot;https://chrome.google.com/webstore/detail/react-developer-tools/fmkadmapgofadopljbjfkapdkoienihi?hl=en&quot;&gt;React Developer Tools&lt;/a&gt;, we can can see our React
components in the virtual DOM:&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;/articles/devember-03/reactdom.png&quot; alt=&quot;&quot;&gt;&lt;/p&gt;
&lt;p&gt;It‚Äôs onwards and upwards from here. I‚Äôll flesh out the UI in the
days to come which will give me a chance to mock the rest of the API.
Following that I‚Äôll go back and fill in the gaps of the API and then
finalise the functionality.&lt;/p&gt;
&lt;h2 id=&quot;today-s-observations&quot;&gt;Today‚Äôs Observations&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;React and ES6 seem to work well but there‚Äôs lots of room for
improvement, this is apparent to me after only a few hours.&lt;/li&gt;
&lt;li&gt;Also, on React, I think they should take a leaf out of Meteor‚Äôs
books in terms of allowing more tightly coupled data bindings
with a backend API&lt;/li&gt;
&lt;li&gt;Shoutout to &lt;a href=&quot;http://browserify.org/&quot;&gt;Browserify&lt;/a&gt; and &lt;a href=&quot;https://github.com/babel/babelify&quot;&gt;Babelify&lt;/a&gt;
for making everything so easy! Starting to really appreciate its benefit now.&lt;/li&gt;
&lt;li&gt;Need to think about how to speed up build time with gulp. Hmm.&lt;/li&gt;
&lt;li&gt;Stats for today: 1 commit, time spent 1h 17m 28s&lt;/li&gt;
&lt;/ul&gt;
</description>
    </item>
    <item>
      <title>Devember Day 2</title>
      <link>http://gary.mcad.am/articles/devember-02/</link>
      <pubDate>Thu, 03 Dec 2015 01:47:39 +0000</pubDate>
      <guid isPermaLink="true">http://gary.mcad.am/articles/devember-02/</guid>
      <author></author>
      <description>&lt;p&gt;Day 2, and I‚Äôve spent 4 hours this evening just fighting to get
ReactJS to compile to ES5. Maybe I can just skip the next 3 days
to compensate?&lt;span class=&quot;more&quot;&gt;&lt;/span&gt;&lt;/p&gt;
&lt;div class=&quot;img-responsive img-border img-md&quot;&gt;
    &lt;img src=&quot;/articles/devember-02/fngggg.gif&quot; alt=&quot;&quot;&gt;
&lt;/div&gt;

&lt;p&gt;That‚Äôs how I feel right now, anyway.&lt;/p&gt;
&lt;p&gt;I‚Äôm a huge fan of ReactJS and I‚Äôve been desperate to use it on a project
for ages. Unfortunately ReactJS and its community are moving so
quickly that they haven‚Äôt stopped to document things properly
and because of how quick it‚Äôs changing, any community guides are already outdated.&lt;/p&gt;
&lt;p&gt;Tonight consisted of swapping and hacking between various combinations of
grunt, gulp, webpack, browserify, babel and react. I‚Äôm still not sure
what the best combination is &amp;ndash; nor that any of the above is even required
(seriously why is it so hard to get the default Hello World running using the
suggested method of &lt;code&gt;babel-cli&lt;/code&gt;?!)&lt;/p&gt;
&lt;p&gt;I‚Äôve finally got everything running with the help of a friendly user in the
React IRC channel. But I‚Äôm a little dissuaded already.&lt;/p&gt;
&lt;p&gt;Sometimes there‚Äôs a comfort in being given a strict set of tools, and I wonder
if React needs time to settle on a way of pre-compilation. Right now it‚Äôs a bit
of a minefield.&lt;/p&gt;
&lt;p&gt;Anyway after many hours of frustration, I‚Äôve ended up with a combination of:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;gulp&lt;/li&gt;
&lt;li&gt;babel&lt;/li&gt;
&lt;li&gt;babelify&lt;/li&gt;
&lt;li&gt;browserify&lt;/li&gt;
&lt;li&gt;react (+ react-dom)&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;I‚Äôm still getting to grips with what everything is, but it‚Äôs a real shame
to spend the evening bashing your head against the wall just trying to
get some JavaScript to pre-compile.&lt;/p&gt;
&lt;p&gt;For now, it‚Äôs rendering. So while I have 0 commits, I‚Äôm happy enough that
tomorrow at least I‚Äôll get to write a line of code (hopefully!) or maybe
I‚Äôll distract myself by implementing some of the UI instead.&lt;/p&gt;
&lt;h2 id=&quot;today-s-observations&quot;&gt;Today‚Äôs Observations&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;At the start of this project I decided to test out Atom. I had previously
been using Sublime Text 3 (which I use full time otherwise). My summary:
it‚Äôs a great idea and an amazing achievement, but I‚Äôm not sure it‚Äôs ready
to be used generally. I‚Äôll revisit this editor in the future, but even for
this small side project, it‚Äôs not up to the task.
&lt;img src=&quot;/articles/devember-02/bye-bye-atom.jpg&quot; alt=&quot;&quot;&gt;&lt;/li&gt;
&lt;li&gt;Stats for today: 0 commits, time spent 4h&lt;/li&gt;
&lt;/ul&gt;
</description>
    </item>
    <item>
      <title>Devember Day 1</title>
      <link>http://gary.mcad.am/articles/devember-01/</link>
      <pubDate>Tue, 01 Dec 2015 23:03:56 +0000</pubDate>
      <guid isPermaLink="true">http://gary.mcad.am/articles/devember-01/</guid>
      <author></author>
      <description>&lt;p&gt;Day 1! I‚Äôve managed to squeeze in 1 hour of development time this
evening&lt;span class=&quot;more&quot;&gt;&lt;/span&gt;, in which I‚Äôve completed the following:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Setup the Lumen framework&lt;/li&gt;
&lt;li&gt;Configure Vagrant with Ubuntu and nginx&lt;/li&gt;
&lt;li&gt;Write and import the first set of database migrations&lt;/li&gt;
&lt;li&gt;I‚Äôve now set up
&lt;a href=&quot;https://github.com/gpmcadam/bloon&quot;&gt;a public Github repository&lt;/a&gt;
to track the project&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Fairly productive hour; looking forward to working on seeding the database
and hopefully starting on the UI in the next couple of days. I‚Äôm eager to
try out Browsersync, since seeing
&lt;a href=&quot;https://www.youtube.com/watch?v=heNWfzc7ufQ&quot;&gt;a cool demo of it&lt;/a&gt; yesterday.&lt;/p&gt;
&lt;h2 id=&quot;today-s-observations&quot;&gt;Today‚Äôs Observations&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;It took me a while to get used to the small differences between Lumen
and Laravel. Mainly the lack of some
&lt;a href=&quot;http://laravel.com/docs/5.1/artisan&quot;&gt;&lt;strong&gt;artisan&lt;/strong&gt;&lt;/a&gt; commands that I‚Äôve
grown used to (such as &lt;code&gt;key:generate&lt;/code&gt; and &lt;code&gt;tinker&lt;/code&gt;), and also that
certain aspects of the framework are disabled by default, including DotEnv,
and have to be enabled manually in &lt;code&gt;bootsrap/app.php&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;In my Googling today, a typo lead me to a genuine
&lt;a href=&quot;http://gary.mcad.am/articles/devember-01/%22https://en.wikipedia.org/wiki/Googlewhack%22&quot;&gt;Googlewhack!&lt;/a&gt;
&lt;img src=&quot;/articles/devember-01/googlewhack.jpg&quot; alt=&quot;&quot;&gt;&lt;/li&gt;
&lt;li&gt;Stats for today: 5 commits, time spent 1h 5m 10s&lt;/li&gt;
&lt;/ul&gt;
</description>
    </item>
    <item>
      <title>Devember as a conduit for escaping procrastination</title>
      <link>http://gary.mcad.am/articles/devember/</link>
      <pubDate>Fri, 27 Nov 2015 22:48:56 +0000</pubDate>
      <guid isPermaLink="true">http://gary.mcad.am/articles/devember/</guid>
      <author></author>
      <description>&lt;p&gt;So, I‚Äôll be doing &lt;a href=&quot;http://devember.org/&quot;&gt;#Devember&lt;/a&gt; this year for the first time. What‚Äôs Devember?&lt;/p&gt;
&lt;p&gt;&lt;span class=&quot;more&quot;&gt;&lt;/span&gt;&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;Devember is a challenge you take up. It is an excuse for programming, for learning to code and for sharing it.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;The rules are simple: &lt;strong&gt;write code on a project every day in December.&lt;/strong&gt; There‚Äôs some extra bits about it being
publicly accessible and doing a daily dev blog &amp;ndash; I‚Äôll do my best to adhere to these but honestly I‚Äôll
be happy to simply write a commit every day.&lt;/p&gt;
&lt;p&gt;My personal goals for Devember are:&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;Explore some technologies on my list that I‚Äôve not given myself time to&lt;/li&gt;
&lt;li&gt;Force me to continue work on a project I‚Äôve been meaning to do in my spare time for a while&lt;/li&gt;
&lt;li&gt;Enable me to write about programming on my blog more often&lt;/li&gt;
&lt;/ol&gt;
&lt;h2 id=&quot;the-project&quot;&gt;The Project&lt;/h2&gt;
&lt;p&gt;The project is a toddler-friendly YouTube app I‚Äôve had on my list for a while. It‚Äôs called &lt;strong&gt;Bloon&lt;/strong&gt; and it
looks&amp;ndash;or will look&amp;ndash;like this:&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;/articles/devember/bloon.png&quot; alt=&quot;&quot;&gt;&lt;/p&gt;
&lt;p&gt;The idea is that parents create playlists for their toddler to browse in a child-friendly user interface
with minimal clutter and simple interface elements. They ‚Äúpop‚Äù a baloon of their favourite character
and off they go!&lt;/p&gt;
&lt;p&gt;The goal is ultimately to release this as a native app on iOS and Android, but for the first iteration
I‚Äôll be writing it as an in-browser only experience.&lt;/p&gt;
&lt;h2 id=&quot;the-methodology&quot;&gt;The Methodology&lt;/h2&gt;
&lt;p&gt;I don‚Äôt anticipate having anything near a working prototype by the end of December, but I hope I‚Äôll to be
most of the way there for my first version.&lt;/p&gt;
&lt;p&gt;I‚Äôll be writing the web version in PHP using &lt;a href=&quot;http://lumen.laravel.com/&quot;&gt;Lumen&lt;/a&gt; to serve the API,
with a MySQL database and &lt;a href=&quot;https://facebook.github.io/react/&quot;&gt;React&lt;/a&gt; to handle handle rendering of the UI.&lt;/p&gt;
&lt;p&gt;I‚Äôm familiar with Laravel and MySQL but not Lumen or React with only minimal experience. So this will be
a great opportunity to explore these areas.&lt;/p&gt;
&lt;p&gt;The development stack will look something like this:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;Server Infrastructure:&lt;/strong&gt; Ubuntu + Vagrant + nginx&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Backend:&lt;/strong&gt; PHP + Lumen + MySQL&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Frontend:&lt;/strong&gt; Twitter Bootstrap + LESS + React&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&quot;follow-my-progress&quot;&gt;Follow My Progress&lt;/h2&gt;
&lt;p&gt;I‚Äôll commit my work to &lt;a href=&quot;https://github.com/gpmcadam&quot;&gt;github&lt;/a&gt; and share information
about my progress as I go on this blog and give a brief summary in the New Year of how everything went.&lt;/p&gt;
&lt;p&gt;I‚Äôve also started &lt;a href=&quot;https://trello.com/b/E0sJf6x3/bloon-devember&quot;&gt;a board on Trello&lt;/a&gt; to track my progress.&lt;/p&gt;
&lt;p&gt;I have a busy schedule this month, my guess is December is the most social month, even for hermits like me! So
I‚Äôm anticipating there‚Äôll be some days where doing an hour of programming will be ‚Ä¶ difficult. I‚Äôll share that, too.&lt;/p&gt;
&lt;p&gt;You can track my progress here, and in byte-sized snippets on &lt;a href=&quot;https://twitter.com/gpmcadam&quot;&gt;Twitter&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;Also, here‚Äôs the silly contract you‚Äôre meant to stick on your announcement:&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;I, Gary McAdam, will participate to the next Devember. My Devember will be Bloon (see above). I promise I will program for my Devember for at least an hour, every day of the next December. I will also write a daily public devlog and will make the produced code publicly available on the internet. No matter what, I will keep my promise. &lt;/p&gt;
&lt;/blockquote&gt;
</description>
    </item>
    <item>
      <title>Reddit Live Comments Chrome Extension</title>
      <link>http://gary.mcad.am/articles/chrome-reddit-live-comments/</link>
      <pubDate>Sat, 13 Jun 2015 14:12:01 +0100</pubDate>
      <guid isPermaLink="true">http://gary.mcad.am/articles/chrome-reddit-live-comments/</guid>
      <author></author>
      <description>&lt;p&gt;Update comment threads on reddit automatically with this Chrome Extension.&lt;/p&gt;
&lt;p&gt;&lt;span class=&quot;more&quot;&gt;&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;https://lh3.googleusercontent.com/fYxwrbAjFoDjGxFkDOacpP8bkG7SGjIm39rMjILryLLnswsj3CEhikRhabxLFIJEqcPjrJ4VDA=s640-h400-e365-rw&quot; alt=&quot;&quot;&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;https://chrome.google.com/webstore/detail/reddit-live/gfmgldfmppamhojkggjlonpboiobnbpe?hl=en-GB&amp;amp;gl=GB&quot;&gt;View the Extension&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://github.com/gpmcadam/chrome-reddit-live-comments&quot;&gt;View the Source Code on github&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&quot;how-to-install&quot;&gt;How to Install&lt;/h3&gt;
&lt;ol&gt;
&lt;li&gt;Install the extension&lt;/li&gt;
&lt;li&gt;Load a comment thread on &lt;a href=&quot;https://reddit.com&quot;&gt;&lt;em&gt;reddit&lt;/em&gt;&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;From the &lt;strong&gt;‚ÄòSort By‚Äô&lt;/strong&gt; menu, sort comments by &lt;strong&gt;‚Äòlive‚Äô&lt;/strong&gt;&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;That‚Äôs it!&lt;/p&gt;
</description>
    </item>
  </channel>
</rss>