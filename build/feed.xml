<?xml version="1.0" encoding="utf-8" ?>
<rss version="2.0" xmlns:content="http://purl.org/rss/1.0/modules/content/" xmlns:wfw="http://wellformedweb.org/CommentAPI/" xmlns:dc="http://purl.org/dc/elements/1.1/" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>gary.mcad.am</title>
    <atom:link href="http://gary.mcad.am/feed.xml" rel="self" type="application/rss+xml"></atom:link>
    <link>http://gary.mcad.am</link>
    <description>I paid for this domain, I might as well use it!</description>
    <pubDate>Thu, 31 Dec 2015 05:06:56 +0000</pubDate>
    <generator>Wintersmith - https://github.com/jnordberg/wintersmith</generator>
    <language>en</language>
    <item>
      <title>Devember Day 30</title>
      <link>http://gary.mcad.am/articles/devember-30/</link>
      <pubDate>Thu, 31 Dec 2015 05:06:56 +0000</pubDate>
      <guid isPermaLink="true">http://gary.mcad.am/articles/devember-30/</guid>
      <author></author>
      <description>&lt;p&gt;With the prototype working, today was spent performing a bit of testing&lt;span class=&quot;more&quot;&gt;&lt;/span&gt; with my first user, my 2 year old daughter, Arya.&lt;/p&gt;
&lt;p&gt;She was excited to use the app when I pointed it out to her on the home screen, and the user interface was intuitive enough (albeit slow &amp;ndash; again, I’ll come back to this later) that she was navigating around and watching her favourite YouTube videos&lt;sup&gt;[1]&lt;/sup&gt; in no time.&lt;/p&gt;
&lt;p&gt;We discovered a few bugs and I’ve fixed those tonight.&lt;/p&gt;
&lt;p&gt;With the bugs squashed, it was time to work on adding some customisation of the playlist items.&lt;/p&gt;
&lt;h2 id=&quot;bing-api-is-surprisingly-good-and-the-php-league-prove-to-be-invaluable-again-&quot;&gt;Bing API is surprisingly good and the PHP League prove to be invaluable again!&lt;/h2&gt;
&lt;div class=&quot;img-responsive img-lg&quot;&gt;
    &lt;img src=&quot;/articles/devember-30/notbad.gif&quot; alt=&quot;&quot;&gt;
&lt;/div&gt;

&lt;p&gt;I integrated with Bing’s Image Search API and the &lt;a href=&quot;https://github.com/thephpleague/color-extractor&quot;&gt;PHP League’s Color Extractor library&lt;/a&gt;. This means that all the parent does is choose an image related to the name of the playlist, and Bloon will fetch it, extract some colour information and show this on the interface to the child user.&lt;/p&gt;
&lt;p&gt;This was very easy to set up, and while it needs a bit of tweaking, I’m very happy with the results!&lt;/p&gt;
&lt;div class=&quot;img-responsive img-cap&quot;&gt;
    &lt;img src=&quot;/articles/devember-30/playlist.png&quot; alt=&quot;&quot;&gt;
    &lt;em&gt;The border and bubble colours shown here are extracted dynamically from the source image shown inside the bubble&lt;/em&gt;
&lt;/div&gt;

&lt;hr&gt;
&lt;p&gt;  &lt;sup&gt;1. It’s worth noting just how great it was to have my daughter be able to browse her favourite YouTube videos with complete restriction, knowing she would only get to the ones I had set up. Not only that, but the feeling of having conceived this idea and been able to deliver it in ~30 days, was a great one.&lt;/sup&gt;&lt;/p&gt;
&lt;h2 id=&quot;today-s-observations&quot;&gt;Today’s Observations&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;Stats for today: 4 commits, 1 tag , time spent 4h 44m 48s&lt;/li&gt;
&lt;/ul&gt;
</description>
    </item>
    <item>
      <title>Devember Day 29</title>
      <link>http://gary.mcad.am/articles/devember-29/</link>
      <pubDate>Wed, 30 Dec 2015 04:05:37 +0000</pubDate>
      <guid isPermaLink="true">http://gary.mcad.am/articles/devember-29/</guid>
      <author></author>
      <description>&lt;p&gt;Right on time!&lt;span class=&quot;more&quot;&gt;&lt;/span&gt; My prototype is basically done.&lt;/p&gt;
&lt;div class=&quot;img-responsive img-lg&quot;&gt;
    &lt;img src=&quot;/articles/devember-29/IMG_2268.jpg&quot; alt=&quot;&quot;&gt;
&lt;/div&gt;

&lt;p&gt;OK so it’s very early stages, and there’s a few features that got jettisoned on the way &amp;ndash; but we’re there, effectively.&lt;/p&gt;
&lt;p&gt;I’ve got 2 more #Devember days to polish some things and maybe work on the authentication/API side. Right now my API is basically one large &lt;code&gt;routes.php&lt;/code&gt; file with everything hacked into it. But it’s functioning well enough to serve the app right now.&lt;/p&gt;
&lt;p&gt;Anyway, I’ve been setting up some playlists for my daughter to have a look at tomorrow morning when she wakes up, when I’ll start some end user testing! :D&lt;/p&gt;
&lt;p&gt;I’ll know a lot more about the app tomorrow, and I’ll have &lt;a href=&quot;https://trello.com/b/E0sJf6x3/bloon-devember&quot;&gt;a longer list of bugs&lt;/a&gt;, I suspect.&lt;/p&gt;
&lt;div class=&quot;img-responsive img-md&quot;&gt;
    &lt;img src=&quot;/articles/devember-29/fly.gif&quot; alt=&quot;&quot;&gt;
&lt;/div&gt;

&lt;h2 id=&quot;today-s-observations&quot;&gt;Today’s Observations&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;iOS web apps are bullshit. More on this in my summary in the New Year. &lt;/li&gt;
&lt;li&gt;Stats for today: 3 commits, 1 tag (yay!), time spent 2h 52m 25s&lt;/li&gt;
&lt;/ul&gt;
</description>
    </item>
    <item>
      <title>Devember Day 28</title>
      <link>http://gary.mcad.am/articles/devember-28/</link>
      <pubDate>Tue, 29 Dec 2015 05:40:41 +0000</pubDate>
      <guid isPermaLink="true">http://gary.mcad.am/articles/devember-28/</guid>
      <author></author>
      <description>&lt;p&gt;Final stretch.&lt;span class=&quot;more&quot;&gt;&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;We now have a simple interface to the YouTube search API. Which, as it happens, is horrendously slow! I’m not going to worry too much about the performance for now, but it’s going to be immediately impossible to use, so I need to look into how I can make this more efficient.&lt;/p&gt;
&lt;div class=&quot;img-responsive img-md&quot;&gt;
    &lt;img src=&quot;/articles/devember-28/mobile.gif&quot; alt=&quot;&quot;&gt;
&lt;/div&gt;

&lt;p&gt;The UI needs working on, and it needs to be hooked up to the playlist management API, but it’s getting there.&lt;/p&gt;
&lt;div class=&quot;img-responsive&quot;&gt;
&lt;img src=&quot;/articles/devember-28/search.png&quot; alt=&quot;&quot;&gt;
&lt;/div&gt;


&lt;p&gt;Once we have a way to add and remove videos, playlists and profiles, the only things left are to do with authentication.&lt;/p&gt;
&lt;p&gt;My goal now is to simply get the prototype of this working locally, and so authentication will be the last thing (probably after the new year and after Devember entirely.)&lt;/p&gt;
&lt;p&gt;I probably have another 4-8 hours of solid work left until I have a working version. Just 3 more days left!&lt;/p&gt;
&lt;h2 id=&quot;today-s-observations&quot;&gt;Today’s Observations&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;Stats for today: 1 commit, time spent 5h 25m 21s&lt;/li&gt;
&lt;/ul&gt;
</description>
    </item>
    <item>
      <title>Devember Day 27</title>
      <link>http://gary.mcad.am/articles/devember-27/</link>
      <pubDate>Mon, 28 Dec 2015 04:59:49 +0000</pubDate>
      <guid isPermaLink="true">http://gary.mcad.am/articles/devember-27/</guid>
      <author></author>
      <description>&lt;p&gt;Productive evening. &lt;span class=&quot;more&quot;&gt;&lt;/span&gt; Very tired. Going to bed!&lt;/p&gt;
&lt;div class=&quot;img-responsive img-md&quot;&gt;
&lt;img src=&quot;/articles/devember-27/sleep.gif&quot; alt=&quot;&quot;&gt;
&lt;/div&gt;

&lt;h2 id=&quot;today-s-observations&quot;&gt;Today’s Observations&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;React is surprisingly good at updating the DOM based on state changes due to hundreds of mouse move events, really impressed!&lt;/li&gt;
&lt;li&gt;Stats for today: 2 commits, time spent 1h 49m 35s&lt;/li&gt;
&lt;/ul&gt;
</description>
    </item>
    <item>
      <title>Devember Day 26</title>
      <link>http://gary.mcad.am/articles/devember-26/</link>
      <pubDate>Sun, 27 Dec 2015 04:41:15 +0000</pubDate>
      <guid isPermaLink="true">http://gary.mcad.am/articles/devember-26/</guid>
      <author></author>
      <description>&lt;p&gt;Grunt grunt! &lt;span class=&quot;more&quot;&gt;&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;The area I’m working on now, basically filling out the parents section and adding forms to all of my models, is brute work. And I find that it needs long, extended periods of time.&lt;/p&gt;
&lt;p&gt;Sometimes, cutting yourself off with an arbitrary time limit of 1-2 hours can prove to be counter-intuitive, as it has the penalty of having to get back on track in your next session.&lt;/p&gt;
&lt;p&gt;Everything is moving forward, slowly, but I’m planning to try and commit a good chunk of time, 4-8 hours, when I have more free time to really get some of the brute work out of the way.&lt;/p&gt;
&lt;div class=&quot;img-responsive img-md&quot;&gt;
&lt;img src=&quot;/articles/devember-26/grunt.gif&quot; alt=&quot;&quot;&gt;
&lt;/div&gt;

&lt;h2 id=&quot;bonus&quot;&gt;Bonus&lt;/h2&gt;
&lt;p&gt;I also wrote a little experiment in React to &lt;a href=&quot;http://codepen.io/gpmcadam/pen/RrGYjR&quot;&gt;show a set of traffic lights.&lt;/a&gt; No real reason.&lt;/p&gt;
&lt;p&gt;&lt;p data-height=&quot;541&quot; data-theme-id=&quot;0&quot; data-slug-hash=&quot;RrGYjR&quot; data-default-tab=&quot;result&quot; data-user=&quot;gpmcadam&quot; class='codepen'&gt;See the Pen &lt;a href='http://codepen.io/gpmcadam/pen/RrGYjR/'&gt;ReactJS and CSS Traffic Lights&lt;/a&gt; by Gary McAdam (&lt;a href='http://codepen.io/gpmcadam'&gt;@gpmcadam&lt;/a&gt;) on &lt;a href='http://codepen.io'&gt;CodePen&lt;/a&gt;.&lt;/p&gt;&lt;/p&gt;
&lt;script async src=&quot;//assets.codepen.io/assets/embed/ei.js&quot;&gt;&lt;/script&gt;

&lt;h2 id=&quot;today-s-observations&quot;&gt;Today’s Observations&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;Stats for today: 1 commit, time spent 1h 49m 35s&lt;/li&gt;
&lt;/ul&gt;
</description>
    </item>
    <item>
      <title>Devember Day 25</title>
      <link>http://gary.mcad.am/articles/devember-25/</link>
      <pubDate>Sat, 26 Dec 2015 00:41:15 +0000</pubDate>
      <guid isPermaLink="true">http://gary.mcad.am/articles/devember-25/</guid>
      <author></author>
      <description>&lt;p&gt;*&lt;em&gt;bangs head on table&lt;/em&gt;*.&lt;span class=&quot;more&quot;&gt;&lt;/span&gt; I’ve just been fighting with small bits and pieces this evening, and getting distracted with browsing StackOverflow and chatting on the reactjs IRC channel.&lt;/p&gt;
&lt;p&gt;Anyway, since it’s Christmas day, I haven’t had alot of opportunity. Unfortunately, after an hour and a half of programming my code isn’t running and I don’t have the patience to find out why, so I’m heading to bed. Will fix tomorrow.&lt;/p&gt;
&lt;p&gt;Merry Christmas, everyone! :)&lt;/p&gt;
&lt;div class=&quot;img-responsive&quot;&gt;
&lt;img src=&quot;/articles/devember-25/elf.gif&quot; alt=&quot;&quot;&gt;
&lt;/div&gt;

&lt;h2 id=&quot;today-s-observations&quot;&gt;Today’s Observations&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;Stats for today: 0 commits, time spent 1h 29m 17s&lt;/li&gt;
&lt;/ul&gt;
</description>
    </item>
    <item>
      <title>Devember Day 24</title>
      <link>http://gary.mcad.am/articles/devember-24/</link>
      <pubDate>Fri, 25 Dec 2015 01:37:09 +0000</pubDate>
      <guid isPermaLink="true">http://gary.mcad.am/articles/devember-24/</guid>
      <author></author>
      <description>&lt;p&gt;I pass.&lt;span class=&quot;more&quot;&gt;&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;I’ve spent all evening putting together Christmas gifts. My hands and brain are tired, so I’m going to sleep. Sorry!&lt;/p&gt;
&lt;div class=&quot;img-responsive img-lg&quot;&gt;
    &lt;img src=&quot;/articles/devember-24/ikea.gif&quot; alt=&quot;&quot;&gt;
&lt;/div&gt;

&lt;h2 id=&quot;today-s-observations&quot;&gt;Today’s Observations&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;Stats for today: 0 commits, time spent (preparing for Christmas): ~12h&lt;/li&gt;
&lt;/ul&gt;
</description>
    </item>
    <item>
      <title>Devember Day 23</title>
      <link>http://gary.mcad.am/articles/devember-23/</link>
      <pubDate>Wed, 23 Dec 2015 23:30:02 +0000</pubDate>
      <guid isPermaLink="true">http://gary.mcad.am/articles/devember-23/</guid>
      <author></author>
      <description>&lt;p&gt;Hallway testing today.&lt;span class=&quot;more&quot;&gt;&lt;/span&gt; I managed to complete a simple version of the add profile form, and I brought with it some bad habits from my understanding of web forms.&lt;/p&gt;
&lt;p&gt;After a brief chat with my (patient) wife regarding what &lt;em&gt;her&lt;/em&gt; expectations and opions on how the form might behave, I learned a few things which I think will postivively impact the design of the admin seciton.&lt;/p&gt;
&lt;p&gt;Just a 5 minute chat while demoing the functionality has probably saved some later frustration, and shows the value of hallway testing.&lt;/p&gt;
&lt;p&gt;Otherwise, very tired. Going to bed.&lt;/p&gt;
&lt;div class=&quot;img-responsive img-md&quot;&gt;
    &lt;img src=&quot;/articles/devember-23/data.gif&quot; alt=&quot;&quot;&gt;
&lt;/div&gt;

&lt;h2 id=&quot;today-s-observations&quot;&gt;Today’s Observations&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;Stats for today: 1 commit, time spent: 1h 29m 13s&lt;/li&gt;
&lt;/ul&gt;
</description>
    </item>
    <item>
      <title>Devember Day 22</title>
      <link>http://gary.mcad.am/articles/devember-22/</link>
      <pubDate>Wed, 23 Dec 2015 01:42:16 +0000</pubDate>
      <guid isPermaLink="true">http://gary.mcad.am/articles/devember-22/</guid>
      <author></author>
      <description>&lt;p&gt;Fun fun fun.&lt;span class=&quot;more&quot;&gt;&lt;/span&gt; Slow evening. Spent most of the day doing some last minute Christmas shopping, and then spent some time just focusing on some of the smaller things to do with the UI.&lt;/p&gt;
&lt;p&gt;I’m &amp;ndash; strangely &amp;ndash; enjoying splitting out some of my requirements into sub-components. There’s a danger of abstracting too much, I suppose (mostly in terms of consuming time versus delivering the prototype.) It’s probably going to be Saturday/Sunday before I begin focusing some larger blocks of time per night to get this ready. But it’s coming together.&lt;/p&gt;
&lt;p&gt;Also, today was my last day in work until the new year. So … yay.&lt;/p&gt;
&lt;div class=&quot;img-responsive img-lg&quot;&gt;
    &lt;img src=&quot;/articles/devember-22/yay.gif&quot; alt=&quot;&quot;&gt;
&lt;/div&gt;

&lt;h2 id=&quot;today-s-observations&quot;&gt;Today’s Observations&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;Stats for today: 1 commit, time spent: 1h 39m 49s&lt;/li&gt;
&lt;/ul&gt;
</description>
    </item>
    <item>
      <title>Devember Day 21</title>
      <link>http://gary.mcad.am/articles/devember-21/</link>
      <pubDate>Tue, 22 Dec 2015 00:58:40 +0000</pubDate>
      <guid isPermaLink="true">http://gary.mcad.am/articles/devember-21/</guid>
      <author></author>
      <description>&lt;p&gt;Ugh.&lt;span class=&quot;more&quot;&gt;&lt;/span&gt; Not felt great today! Still managed to get about an hour in this evening after a nap and then some Christmas shopping courtesy of Amazon Prime One-Day Delivery.&lt;/p&gt;
&lt;div class=&quot;img-responsive img-md&quot;&gt;
    &lt;img src=&quot;/articles/devember-21/amazin-packaging.gif&quot; alt=&quot;&quot;&gt;
&lt;/div&gt;

&lt;p&gt;Nothing of interest to note this evening, except that react-bootstrap is a &lt;em&gt;huge&lt;/em&gt; timesaver which I’m sad to only just discover. Makes me think there should be something similar available in PHP/Laravel.&lt;/p&gt;
&lt;h2 id=&quot;today-s-observations&quot;&gt;Today’s Observations&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;Lost my streak again for not comitting in 24 hours :(&lt;/li&gt;
&lt;li&gt;Stats for today: 2 commits, time spent: 0h 53m 37s&lt;/li&gt;
&lt;/ul&gt;
</description>
    </item>
    <item>
      <title>Devember Day 20</title>
      <link>http://gary.mcad.am/articles/devember-20/</link>
      <pubDate>Sun, 20 Dec 2015 23:41:51 +0000</pubDate>
      <guid isPermaLink="true">http://gary.mcad.am/articles/devember-20/</guid>
      <author></author>
      <description>&lt;p&gt;11 days to go! &lt;span class=&quot;more&quot;&gt;&lt;/span&gt; I feel like I’m very close to a working prototype.&lt;/p&gt;
&lt;p&gt;In fact, I could begin testing now if I spent some time fetching some data from YouTube to populate my database. But I think that would be a waste of time right now.&lt;/p&gt;
&lt;p&gt;Besides, I spent some time getting the parent interface set up. I have, what I think is a pretty decent parent-protection dialog. It’s something that’s included in a lot of child-oriented apps. Basically, some how to stop the child from accidentally accessing the settings panel and breaking stuff. Usually this is done by a simple maths problem (I’ll be replacing this with TouchID in the final native version).&lt;/p&gt;
&lt;p&gt;One thing I’ve found frustrating, as a parent, is that often our daughter will get stuck with the app prompting her to solve a maths problem. It’s not always obvious to her how to get of that screen, so for my version I’ve added a 15 second timer that will auto-close the parental control dialog if nothing has happened.&lt;/p&gt;
&lt;div class=&quot;img-responsive&quot;&gt;
    &lt;img src=&quot;/articles/devember-20/parents.png&quot; alt=&quot;&quot;&gt;
&lt;/div&gt;

&lt;p&gt;This gave me a chance to look at including some very rapidly updating React components. In the screen-shot above, the scrollbar is rendered using the &lt;em&gt;amazing&lt;/em&gt; &lt;a href=&quot;https://react-bootstrap.github.io/&quot;&gt;react-bootstrap&lt;/a&gt; project&lt;sup&gt;1&lt;/sup&gt; and its progress amount is calculated inside a timer, updating every 100ms. React doesn’t flinch and the component updates smoothly.&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;this.countdownInterval = setInterval(() =&amp;gt; {
    if (this.state.timeBeforeClosesNow &amp;gt; 0) {
        this.setState({ timeBeforeClosesNow: (this.state.timeBeforeClosesNow-100) })
    } else if (this.state.timeBeforeClosesNow &amp;lt;= 0) {
        this.hideModal();
    }
}, 100);

// ...

&amp;lt;ProgressBar now={this.state.timeBeforeClosesNow/this.state.timeBeforeClosesMax*100} /&amp;gt;
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;Too smooth!&lt;/p&gt;
&lt;div class=&quot;img-responsive img-lg&quot;&gt;
    &lt;img src=&quot;/articles/devember-20/ned.gif&quot; alt=&quot;&quot;&gt;
&lt;/div&gt;

&lt;p&gt;–&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;Unfortunately I’ve had to roll back my project to Twitter Bootstrap 3.x as the react-bootstrap package doesn’t support 4.x yet. Not a biggie, and understandable. But still, I would’ve &lt;em&gt;loved&lt;/em&gt; to see it working with the new Bootstrap alpha.&lt;/li&gt;
&lt;/ol&gt;
&lt;h2 id=&quot;today-s-observations&quot;&gt;Today’s Observations&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;p&gt;Seriously, &lt;a href=&quot;https://react-bootstrap.github.io/components.html#forms&quot;&gt;this is too awesome&lt;/a&gt;:  &lt;/p&gt;
&lt;pre&gt;&lt;code&gt; &amp;lt;Input
  type=&amp;quot;text&amp;quot;
  value={this.state.value}
  placeholder=&amp;quot;Enter text&amp;quot;
  label=&amp;quot;Working example with validation&amp;quot;
  help=&amp;quot;Validation is based on string length.&amp;quot;
  bsStyle={this.validationState()}
  hasFeedback
  ref=&amp;quot;input&amp;quot;
  groupClassName=&amp;quot;group-class&amp;quot;
  labelClassName=&amp;quot;label-class&amp;quot;
  onChange={this.handleChange} /&amp;gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;One full day left in work until Christmas break! I’m still unsure whether that means more or less time on the project.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;Stats for today: 3 commits, time spent: 3h 27m 51s&lt;/li&gt;
&lt;/ul&gt;
</description>
    </item>
    <item>
      <title>Devember Day 19</title>
      <link>http://gary.mcad.am/articles/devember-19/</link>
      <pubDate>Sun, 20 Dec 2015 01:51:36 +0000</pubDate>
      <guid isPermaLink="true">http://gary.mcad.am/articles/devember-19/</guid>
      <author></author>
      <description>&lt;p&gt;I fixed the player! &lt;span class=&quot;more&quot;&gt;&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;Yay!&lt;/p&gt;
&lt;p&gt;Oh, and I also wrote my database models, updated my migrations to match the changes since the initial set of migrations were written, and seeded the database with some real-ish data. Now the app is serving out from the database!&lt;/p&gt;
&lt;p&gt;Next up:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Parent Interface (fill the database with real values)&lt;/li&gt;
&lt;li&gt;Authentication (yeah, leaving that until last)&lt;/li&gt;
&lt;li&gt;Hallway testing!&lt;/li&gt;
&lt;/ul&gt;
&lt;div class=&quot;img-responsive img-lg&quot;&gt;
 &lt;img src=&quot;/articles/devember-19/hallway.gif&quot; alt=&quot;&quot;&gt;&lt;br&gt;&lt;/div&gt;

&lt;h2 id=&quot;today-s-observations&quot;&gt;Today’s Observations&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;Stats for today: 2 commits, time spent: 1h 34m 48s&lt;/li&gt;
&lt;/ul&gt;
</description>
    </item>
    <item>
      <title>Devember Day 18</title>
      <link>http://gary.mcad.am/articles/devember-18/</link>
      <pubDate>Sat, 19 Dec 2015 02:18:00 +0000</pubDate>
      <guid isPermaLink="true">http://gary.mcad.am/articles/devember-18/</guid>
      <author></author>
      <description>&lt;p&gt;Quiet evening, &lt;em&gt;again!&lt;/em&gt;&lt;span class=&quot;more&quot;&gt;&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;My issues with the player component come from the destructive nature of VideoJS and the component life-cycle in ReactJS.&lt;/p&gt;
&lt;p&gt;I feel I’m close to a solution but I’ve only been able to commit about an hour tonight after a busy schedule.&lt;/p&gt;
&lt;h2 id=&quot;in-other-news&quot;&gt;In Other News&lt;/h2&gt;
&lt;div class=&quot;img-responsive img-sm&quot;&gt;
&lt;img src=&quot;https://travis-ci.org/gpmcadam/Blog.svg?branch=master&quot; alt=&quot;&quot;&gt;
&lt;/div&gt;

&lt;p&gt;The blog, however, I spent a few hours on since I wanted to test out a continuous integration system. I went with &lt;a href=&quot;http://travis-ci.org&quot;&gt;Travis&lt;/a&gt; in the end, and the blog is now publishing to Amazon S3 automatically upon commit! It’s something else I’ve failed to get up to speed on, and I’m glad I was able to during Devember. I intend to put up a more detailed post on Travis towards the end of the month.&lt;/p&gt;
&lt;p&gt;I’ll also be looking at solutions that integrate with BitBucket, too.&lt;/p&gt;
&lt;p&gt;&lt;em&gt;Tomorrow I’ll fix the player. Tomorrow I’ll fix the player. Tomorrow I’ll fix the player. Tomorrow I’ll fix the player. Tomorrow I’ll fix the player. Tomorrow I’ll fix the player. Tomorrow I’ll fix the player. Tomorrow I’ll fix the player…&lt;/em&gt;&lt;/p&gt;
&lt;div class=&quot;img-responsive img-lg&quot;&gt;
    &lt;img src=&quot;/articles/devember-18/future.gif&quot; alt=&quot;&quot;&gt;
&lt;/div&gt;

&lt;h2 id=&quot;today-s-observations&quot;&gt;Today’s Observations&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;Stats for today: 0 commits, time spent: 1h 04m 10s&lt;/li&gt;
&lt;/ul&gt;
</description>
    </item>
    <item>
      <title>Devember Day 17</title>
      <link>http://gary.mcad.am/articles/devember-17/</link>
      <pubDate>Fri, 18 Dec 2015 00:07:48 +0000</pubDate>
      <guid isPermaLink="true">http://gary.mcad.am/articles/devember-17/</guid>
      <author></author>
      <description>&lt;p&gt;Quiet evening&lt;span class=&quot;more&quot;&gt;&lt;/span&gt; tidying up some of the playlist code and the UI for playlists themselves.&lt;/p&gt;
&lt;p&gt;Also I broke the player. I’m now too tired to fix it.&lt;/p&gt;
&lt;div class=&quot;img-responsive img-md&quot;&gt;
    &lt;img src=&quot;/articles/devember-17/broken.gif&quot; alt=&quot;&quot;&gt;
&lt;/div&gt;

&lt;p&gt;Tomorrow I’ll fix the player. Following that I’m going to try and get started on the parental controls, which should end with bringing in live data from YouTube.&lt;/p&gt;
&lt;h2 id=&quot;today-s-observations&quot;&gt;Today’s Observations&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;I broke the player&lt;/li&gt;
&lt;li&gt;Stats for today: 0 commits, time spent: 2h 24m 31s&lt;/li&gt;
&lt;/ul&gt;
</description>
    </item>
    <item>
      <title>Devember Day 16</title>
      <link>http://gary.mcad.am/articles/devember-16/</link>
      <pubDate>Thu, 17 Dec 2015 00:58:45 +0000</pubDate>
      <guid isPermaLink="true">http://gary.mcad.am/articles/devember-16/</guid>
      <author></author>
      <description>&lt;p&gt;I’ve been exploring the concept of ‘Reactive’.&lt;span class=&quot;more&quot;&gt;&lt;/span&gt; The beauty of React is becoming more and more apparent to me. I’ve implemented a version of the Flux pattern with my React app, which adds so much simplicity to the flow of data and makes so much sense. Today though, something very simple blew my mind.&lt;/p&gt;
&lt;h2 id=&quot;how-de-do-da-&quot;&gt;How-de-do-da?&lt;/h2&gt;
&lt;p&gt;My player interface now renders a small toolbar across the top of the screen. When the video plays, I want the toolbar to disappear off the screen.&lt;/p&gt;
&lt;p&gt;With jQuery, I might do the following:&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;Detect the &lt;code&gt;play&lt;/code&gt; and &lt;code&gt;pause&lt;/code&gt; event on the video element&lt;/li&gt;
&lt;li&gt;Select the DOM element which contains both the toolbar and the player&lt;/li&gt;
&lt;li&gt;Add a class to the parent DOM element (either &lt;code&gt;.play&lt;/code&gt; or &lt;code&gt;.pause&lt;/code&gt;)&lt;/li&gt;
&lt;li&gt;Add a rule in CSS to animate the element off screen&lt;/li&gt;
&lt;li&gt;Remove the previous class (either &lt;code&gt;.play&lt;/code&gt; or &lt;code&gt;.pause&lt;/code&gt;) depending on the current state&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;The code for this might look something like this:&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;this.player.on(&amp;#39;play&amp;#39;, function() {
    $(&amp;#39;.player&amp;#39;).removeClass(&amp;#39;paused&amp;#39;).addClass(&amp;#39;playing&amp;#39;);
});
this.player.on(&amp;#39;pause&amp;#39;, function() {
    $(&amp;#39;.player&amp;#39;).removeClass(&amp;#39;playing&amp;#39;).addClass(&amp;#39;paused&amp;#39;);
});
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;This isn’t a bad approach, but it requires a pointer to the DOM element and means I have to get my hands dirty writing to the class attribute, I also have to track the state of the player to know which of the two classes to remove or to add. It’s just not a very clean approach.&lt;/p&gt;
&lt;p&gt;So, here’s how this works with React:&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;...
this.player.on(&amp;#39;play&amp;#39;, () =&amp;gt; { this.setState({ playerState: &amp;#39;paused&amp;#39; }); });
this.player.on(&amp;#39;pause&amp;#39;, () =&amp;gt; { this.setState({ playerState: &amp;#39;playing&amp;#39; }); });
...
render() {
    return (
        &amp;lt;div className={`player ${this.state.playerState}`}&amp;gt;
            ...
        &amp;lt;/div&amp;gt;
    )
}
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;So what’s going on here? Well, if you’re new to React, the &lt;code&gt;setState&lt;/code&gt; method causes a re-render of the plugin. So when the player events fire, the state is modified to include the &lt;code&gt;playerState&lt;/code&gt; (either ‘paused’ or ‘playing’). And then our render method uses the &lt;code&gt;playerState&lt;/code&gt; in our state to determine what class to add to our player container.&lt;/p&gt;
&lt;p&gt;Firstly, this approach is much cleaner. Rather than our events ending up with direct DOM modifications, events lead to &lt;em&gt;state&lt;/em&gt; modifications, which in turn get rendered back to the DOM.&lt;/p&gt;
&lt;p&gt;But! The reason this is so incredible is because inside our &lt;code&gt;.player&lt;/code&gt; element we have a lot of DOM, including a video player embedding a YouTube &lt;code&gt;iframe&lt;/code&gt;. So what happens to all that important insidey stuff when the component re-renders?&lt;/p&gt;
&lt;p&gt;Well, that’s the beauty of React. Nothing! It just … &lt;em&gt;knows&lt;/em&gt; … to only modify the HTML &lt;code&gt;class&lt;/code&gt; attribute and not modify any of the innards. How fucking awesome is that?&lt;/p&gt;
&lt;div class=&quot;img-responsive img-md&quot;&gt;
    &lt;img src=&quot;/articles/devember-16/mindblown.gif&quot; alt=&quot;&quot;&gt;
&lt;/div&gt;

&lt;h2 id=&quot;today-s-observations&quot;&gt;Today’s Observations&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;Since my previous commit was prior to midnight on the 15th and my most recent commit was after midnight on the 16th (i.e. the 17th) I’ve lost another github streak :(&lt;/li&gt;
&lt;li&gt;Stats for today: 1 commit, time spent: 2h 39m 3s&lt;/li&gt;
&lt;/ul&gt;
</description>
    </item>
    <item>
      <title>Devember Day 15</title>
      <link>http://gary.mcad.am/articles/devember-15/</link>
      <pubDate>Tue, 15 Dec 2015 23:54:30 +0000</pubDate>
      <guid isPermaLink="true">http://gary.mcad.am/articles/devember-15/</guid>
      <author></author>
      <description>&lt;p&gt;Half-way there!&lt;span class=&quot;more&quot;&gt;&lt;/span&gt; However after a long night, I’ve found myself too tired to complete what I’m working on (the unfortunately tedius task of skinning a Video.js player interface).&lt;/p&gt;
&lt;p&gt;Maybe with some sleep and a bit more energy I’ll find myself with more enthusiasm for the task tomorrow!&lt;/p&gt;
&lt;div class=&quot;img-responsive img-md&quot;&gt;
    &lt;img src=&quot;/articles/devember-15/sleepy.gif&quot; alt=&quot;&quot;&gt;
&lt;/div&gt;

&lt;p&gt;We’ll see!&lt;/p&gt;
&lt;h2 id=&quot;today-s-observations&quot;&gt;Today’s Observations&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;About half way until the end of Devember, and I feel like I’m about half way towards a working prototype. I’m hoping to begin some user testing later this week with my 2-year old daughter!&lt;/li&gt;
&lt;li&gt;The majority of the rest of the month will likely focus on improvements to the UI and writing the parent interface.&lt;/li&gt;
&lt;li&gt;Stats for today: 0 commits, time spent: 27m 20s&lt;/li&gt;
&lt;/ul&gt;
</description>
    </item>
    <item>
      <title>Devember Day 14</title>
      <link>http://gary.mcad.am/articles/devember-14/</link>
      <pubDate>Tue, 15 Dec 2015 01:13:59 +0000</pubDate>
      <guid isPermaLink="true">http://gary.mcad.am/articles/devember-14/</guid>
      <author></author>
      <description>&lt;p&gt;I &amp;lt;3 Flexbox.&lt;span class=&quot;more&quot;&gt;&lt;/span&gt;&lt;/p&gt;
&lt;div class=&quot;img-responsive&quot;&gt;
    &lt;img src=&quot;/articles/devember-14/flexbox-is-awesome.png&quot; alt=&quot;&quot;&gt;
&lt;/div&gt;

&lt;p&gt;I’ve been able to use it a little more tonight. I’ve been aware of it for a while and have tinkered with it, but today I’ve tried to delve a little deeper into it. It was a breeze to set up a responsive “full screen” player interface with just a few CSS properties.&lt;/p&gt;
&lt;p&gt;I’m not sure if it’s just me but I find the naming conventions a little dense and I feel it’ll take a while to properly master it (as with all things presentation with HTML/CSS!)&lt;/p&gt;
&lt;p&gt;I also played around with &lt;a href=&quot;http://videojs.com/&quot;&gt;VideoJS&lt;/a&gt; today and I’m looking forward to integrating with this player for serving out my videos. There’s a plugin called &lt;a href=&quot;https://github.com/eXon/videojs-youtube&quot;&gt;videojs-youtube&lt;/a&gt; which handles playing of external videos. Provided I can get this set up, hopefully I’ll not have to touch the YouTube API itself (except for the data API for search later on) and maybe have a bit more control over how I display videos.&lt;/p&gt;
&lt;div class=&quot;img-responsive img-lg img-cap&quot;&gt;
    &lt;img src=&quot;/articles/devember-14/freebie.gif&quot; alt=&quot;&quot;&gt;
    &lt;em&gt;Well, that was a freebie!&lt;/em&gt;
&lt;/div&gt;

&lt;p&gt;We’ll see!&lt;/p&gt;
&lt;h2 id=&quot;today-s-observations&quot;&gt;Today’s Observations&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;About 1 week now until I break for Christmas. This usually means a last minute rush at work to get everything prepared for when I’m not there, hopefully I’m still able to get an hour or two in.&lt;/li&gt;
&lt;li&gt;Being off work for a while should (in theory) give me a lot more time to work on the project. However, I’m hoping to not be spending every day of my vacation programming, so still aiming for 1-2 hrs per day!&lt;/li&gt;
&lt;li&gt;Days I’m thinking will be a challenge: Xmas Day, New Years Eve, New Years Day. We’ll see how it goes!&lt;/li&gt;
&lt;li&gt;Stats for today: 1 commit, time spent: 2h 8m 29s&lt;/li&gt;
&lt;/ul&gt;
</description>
    </item>
    <item>
      <title>Devember Day 13</title>
      <link>http://gary.mcad.am/articles/devember-13/</link>
      <pubDate>Mon, 14 Dec 2015 01:00:35 +0000</pubDate>
      <guid isPermaLink="true">http://gary.mcad.am/articles/devember-13/</guid>
      <author></author>
      <description>&lt;p&gt;Something lighter today.&lt;span class=&quot;more&quot;&gt;&lt;/span&gt; Well, some quick cleanup of some of the JSX, but following that I toyed with the UI of the playlists view.&lt;/p&gt;
&lt;div class=&quot;img-responsive&quot;&gt;
    &lt;img src=&quot;/articles/devember-13/bloon-dev.png&quot; alt=&quot;&quot;&gt;
&lt;/div&gt;

&lt;p&gt;I’ve mocked up some playlists on the server side, which now gets served to the client. Depending on the size of the playlist, a weight is assigned to the “bubble” which is rendered. This then determines the size and animation qualities.&lt;/p&gt;
&lt;p&gt;This looks OK right now, but when it gets closer to the end of the project, I’ll be amending the animation to be more realistic, have more variety per bubble and to have the weight based on other attributes such as age and popularity of the user.&lt;/p&gt;
&lt;p&gt;Tomorrow I’ll be working on one of the things I’m anticipating being a pain and something I’m dreading, Google’s YouTube Embed player. This will probably take up my focus for the next week.&lt;/p&gt;
&lt;div class=&quot;img-responsive img-lg img-cap&quot;&gt;
    &lt;img src=&quot;/articles/devember-13/darkness.gif&quot; alt=&quot;&quot;&gt;
    &lt;em&gt;Yay, Google APIs&lt;/em&gt;
&lt;/div&gt;

&lt;h2 id=&quot;today-s-observations&quot;&gt;Today’s Observations&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;Working with animations in the browser directly isn’t the most fun, I wish there was a more flexible framework for writing powerful animations with complex behavious (e.g. altering the animation behaviour for various states)&lt;/li&gt;
&lt;li&gt;Stats for today: 2 commits, time spent: 2h 16m&lt;/li&gt;
&lt;/ul&gt;
</description>
    </item>
    <item>
      <title>Devember Day 12</title>
      <link>http://gary.mcad.am/articles/devember-12/</link>
      <pubDate>Sun, 13 Dec 2015 02:36:30 +0000</pubDate>
      <guid isPermaLink="true">http://gary.mcad.am/articles/devember-12/</guid>
      <author></author>
      <description>&lt;p&gt;Programming drunk is impossible, worse only than programming hungover…&lt;span class=&quot;more&quot;&gt;&lt;/span&gt;&lt;/p&gt;
&lt;div class=&quot;img-responsive img-lg&quot;&gt;
    &lt;img src=&quot;/articles/devember-12/dying.gif&quot; alt=&quot;&quot;&gt;
&lt;/div&gt;

&lt;p&gt;However, finally, &lt;a href=&quot;https://facebook.github.io/flux/docs/overview.html&quot;&gt;Flux&lt;/a&gt; makes sense!
After spending another few hours tonight
watching &lt;a href=&quot;https://egghead.io/series/react-flux-architecture-es6&quot;&gt;a great course on egghead.io&lt;/a&gt;,
I’ve come out understanding the Flux architecture in a lot more detail!&lt;/p&gt;
&lt;p&gt;This is exactly what I was talking about when I was pining for more structure and an imposed
set of rules in React. The downside here though is that there are a lot of ways to interpret
the Flux architecture, and there’s a lot of frameworks written around it.&lt;/p&gt;
&lt;p&gt;I’m sure in the future the community will settle around a few big ideas. For now, I’m settling
with a fairly bog-standard Flux architecture using Facebook’s &lt;a href=&quot;https://github.com/facebook/flux/&quot;&gt;flux&lt;/a&gt;
package.&lt;/p&gt;
&lt;h2 id=&quot;routing&quot;&gt;Routing&lt;/h2&gt;
&lt;p&gt;After investigating Backbone and Page.js, it seemed obvious to me that
&lt;a href=&quot;https://github.com/rackt/react-router&quot;&gt;react-router&lt;/a&gt; is the
better choice. Anything else includes a lot of rewriting of stuff that’s already been well
thought out, particularly around component re-rendering.&lt;/p&gt;
&lt;h2 id=&quot;onwards-again-&quot;&gt;Onwards … again!?&lt;/h2&gt;
&lt;p&gt;I feel like I’ve got a far better organised and more stable architecture to move on with now.
I don’t anticipate any big changes to the structure until the first prototype is complete.&lt;/p&gt;
&lt;p&gt;So next, it’ll be fleshing out the rest of the pages and including functionality.&lt;/p&gt;
&lt;h2 id=&quot;today-s-observations&quot;&gt;Today’s Observations&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;Cool ES6 tidbits worked with: &lt;a href=&quot;https://developer.mozilla.org/en/docs/Web/JavaScript/Reference/template_strings&quot;&gt;template strings&lt;/a&gt;, &lt;a href=&quot;https://developer.mozilla.org/en/docs/Web/JavaScript/Reference/Functions/Arrow_functions&quot;&gt;arrow functions&lt;/a&gt;, &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Operators/Spread_operator&quot;&gt;spread operator&lt;/a&gt;, &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Operators/Object_initializer&quot;&gt;object initialisation shorthand&lt;/a&gt; &amp;ndash; awesome!&lt;/li&gt;
&lt;li&gt;Tried to catch up for missing a night &lt;a href=&quot;http://gary.mcad.am/articles/devember-11&quot;&gt;yesterday due to excessive drinking&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;Stats for today: 3 commits, time spent: 2h 45m 58s&lt;/li&gt;
&lt;/ul&gt;
</description>
    </item>
    <item>
      <title>Devember Day 11</title>
      <link>http://gary.mcad.am/articles/devember-11/</link>
      <pubDate>Sat, 12 Dec 2015 06:00:00 +0000</pubDate>
      <guid isPermaLink="true">http://gary.mcad.am/articles/devember-11/</guid>
      <author></author>
      <description>&lt;p&gt;Zzzzzz&lt;span class=&quot;more&quot;&gt;&lt;/span&gt; &lt;/p&gt;
&lt;div class=&quot;img-responsive img-lg&quot;&gt;
    &lt;img src=&quot;/articles/devember-11/homer.gif&quot; alt=&quot;&quot;&gt;
&lt;/div&gt;

&lt;h2 id=&quot;today-s-observations&quot;&gt;Today’s Observations&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;Stats for today: 0 commits, time spent 0h 0m 0s&lt;/li&gt;
&lt;/ul&gt;
</description>
    </item>
    <item>
      <title>Devember Day 10</title>
      <link>http://gary.mcad.am/articles/devember-10/</link>
      <pubDate>Fri, 11 Dec 2015 02:10:23 +0000</pubDate>
      <guid isPermaLink="true">http://gary.mcad.am/articles/devember-10/</guid>
      <author></author>
      <description>&lt;p&gt;On the move!&lt;span class=&quot;more&quot;&gt;&lt;/span&gt; I’m in a hotel tonight and I’ve been out with a few friends so tonight I spent most of my time learning some more about &lt;a href=&quot;https://facebook.github.io/flux/&quot;&gt;Flux&lt;/a&gt;, an application architecture/development methodology which works with React, developed by Facebook &amp;ndash; something which seems more and more important as I delve deeper into React. I’ll be spending time tonight and tomorrow to learning Flux and how to use it in my project. I’m also aware of &lt;a href=&quot;https://github.com/reflux/refluxjs&quot;&gt;Reflux&lt;/a&gt;, which I’ll be giving some attention to, and trying to determine which to go with.&lt;/p&gt;
&lt;div class=&quot;img-responsive img-lg&quot;&gt;
    &lt;img src=&quot;/articles/devember-10/reflux.gif&quot; alt=&quot;&quot;&gt;
&lt;/div&gt;

&lt;p&gt;It bothers me that I’m spending more time on learning these things than getting my hands dirty, but I’ve gotten to the point where I’m so unsure what to do next that I think taking a step back is needed, and hopefully I can push on after this.&lt;/p&gt;
&lt;p&gt;I’m using &lt;a href=&quot;https://egghead.io/lessons/react-development-environment-setup?series=react-flux-architecture&quot;&gt;a great series of videos on egghead.io&lt;/a&gt; for my initial research. So no commits tonight! Christmas party tomorrow, so I’m guessing no commits then, either! Hopefully I’ll come out the other side knowing a lot more about Flux and being in a better position to move my app forward. (And ideally not very hungover!)&lt;/p&gt;
&lt;h2 id=&quot;today-s-observations&quot;&gt;Today’s Observations&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;Hotel WiFi is better! £3 for 24 hrs though! :(&lt;/li&gt;
&lt;li&gt;Stats for today: 0 commits, time spent 1h 30m&lt;/li&gt;
&lt;/ul&gt;
</description>
    </item>
    <item>
      <title>Devember Day 9</title>
      <link>http://gary.mcad.am/articles/devember-09/</link>
      <pubDate>Thu, 10 Dec 2015 00:44:08 +0000</pubDate>
      <guid isPermaLink="true">http://gary.mcad.am/articles/devember-09/</guid>
      <author></author>
      <description>&lt;p&gt;Argggggggh!!!&lt;span class=&quot;more&quot;&gt;&lt;/span&gt;&lt;/p&gt;
&lt;div class=&quot;img-responsive img-md&quot;&gt;
    &lt;img src=&quot;/articles/devember-09/not.gif&quot; alt=&quot;&quot;&gt;
&lt;/div&gt;

&lt;p&gt;Too much time spent farting around trying to understand topics associated with React. Search terms today include: flux, reflux, react+backbone, backbone es6, backbone router es6, backbone react browserify … etc. etc.&lt;/p&gt;
&lt;p&gt;Taking on too much? Need to commit more time than I have in an evening to properly understanding Flux and how to integrate it with React and maybe Backbone. Maybe I’ll just delete everything and start again?&lt;/p&gt;
&lt;p&gt;Everyone has an opinion on how to do this, the community is chaotic right now. There’s a solution in here somewhere, and I can taste it. The key will be understanding Flux, I feel.&lt;/p&gt;
&lt;h2 id=&quot;today-s-observations&quot;&gt;Today’s Observations&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;Out travelling for 2 nights, hoping for better hotel WiFi&lt;/li&gt;
&lt;li&gt;Out at work’s Christmas party on Friday night &amp;ndash; that’ll be a fun thing to code after! 🎅 🍻&lt;/li&gt;
&lt;li&gt;Stats for today: 0 commit, time spent 1h 30m 02s&lt;/li&gt;
&lt;/ul&gt;
</description>
    </item>
    <item>
      <title>Devember Day 8</title>
      <link>http://gary.mcad.am/articles/devember-08/</link>
      <pubDate>Wed, 09 Dec 2015 01:31:52 +0000</pubDate>
      <guid isPermaLink="true">http://gary.mcad.am/articles/devember-08/</guid>
      <author></author>
      <description>&lt;p&gt;Experimenting with React and &lt;a href=&quot;https://visionmedia.github.io/page.js/&quot;&gt;Page.js&lt;/a&gt;&lt;span class=&quot;more&quot;&gt;&lt;/span&gt;, an interesting micro client-side aimed at making the process of routing easier without the weight of an MVC framework.&lt;/p&gt;
&lt;p&gt;What I fear I’m in danger of doing, however, is solving the ‘V’ part of MVC with React, and the ‘C’ part with Page.js. I’m handling the ‘M’ with AJAX and my API, so maybe I’m just cobbling together a franken-framework, of sorts?&lt;/p&gt;
&lt;div class=&quot;img-responsive img-lg&quot;&gt;
    &lt;img src=&quot;/articles/devember-08/monster.gif&quot; alt=&quot;&quot;&gt;
&lt;/div&gt;

&lt;p&gt;Anyway, the experiment has been worthwhile. Page.js is a nifty little tool and it’s introducing routing to React has give me more control over my component rendering and organisation.&lt;/p&gt;
&lt;p&gt;I’m having some issues with passing session information around now, and I wonder if I’m coming at this with my PHP-trained-brain, rather than trying to think in React. Right now I’m working with &lt;a href=&quot;https://www.npmjs.com/package/react-cookie&quot;&gt;react-cookie&lt;/a&gt; to help solve this, but I’m chasing myself around a bit in terms of how to handle state on various “pages” (basically a React component being rendered to a parent component.)&lt;/p&gt;
&lt;p&gt;I do wonder whether, at this point, the maturity of something like Angular, Knockout or Backbone might be more useful. Something which I’ll experiment with tomorrow and then make a final decision.&lt;/p&gt;
&lt;h2 id=&quot;today-s-observations&quot;&gt;Today’s Observations&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;Stats for today: 1 new branch, 1 commit, time spent 1h 56m 33s&lt;/li&gt;
&lt;/ul&gt;
</description>
    </item>
    <item>
      <title>Devember Day 7</title>
      <link>http://gary.mcad.am/articles/devember-07/</link>
      <pubDate>Tue, 08 Dec 2015 00:55:09 +0000</pubDate>
      <guid isPermaLink="true">http://gary.mcad.am/articles/devember-07/</guid>
      <author></author>
      <description>&lt;p&gt;One week in.&lt;span class=&quot;more&quot;&gt;&lt;/span&gt;&lt;/p&gt;
&lt;div class=&quot;img-responsive img-lg&quot;&gt;
    &lt;img src=&quot;/articles/devember-07/calendar.gif&quot; alt=&quot;&quot;&gt;
&lt;/div&gt;

&lt;p&gt;I’ve logged 12 hours so far over 7 days. So far it’s gone OK and I’m more happy with what I’ve learned in this time than the results I’ve been able to produce.&lt;/p&gt;
&lt;p&gt;I feel like I’ve gone from knowing only very little about React &amp;ndash; and next to nothing about Gulp, Babel, Browserify and ES6 &amp;ndash; and now I’ve got a good hold on the basics and a structure for a demo for this web app.&lt;/p&gt;
&lt;p&gt;We’re just under 1/4 of the way through Devember and I feel like the next 7 days will be telling in terms of how quickly I’m hoping to get a fully working prototype of the app. I may have to sacrifice some functionality to get there.&lt;/p&gt;
&lt;p&gt;Today I spent some time polishing the UI of the landing page and introducing some animation with the awesome &lt;a href=&quot;https://daneden.github.io/animate.css/&quot;&gt;animate.css&lt;/a&gt; project. Tomorrow, I’m going to hopefully spend some time investigating routing options for a single page app in React. I’ve looked very briefly at &lt;a href=&quot;https://github.com/rackt/react-router&quot;&gt;react-router&lt;/a&gt; but I’m not 100% sure if it’s what I need. Needs more thought!&lt;/p&gt;
&lt;h2 id=&quot;today-s-observations&quot;&gt;Today’s Observations&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;Odd hours meant I lost a github streak that would’ve lasted 31 days hopefully &lt;code&gt;:(&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;The differences between SASS and LESS (other than syntax) aren’t that obvious to me yet, although compile time seems a lot quicker (anecdotally). Still waiting to discover the “killer feature” which separates the two.&lt;/li&gt;
&lt;li&gt;Stats for today: 1 commit, time spent 1h 37m 32s&lt;/li&gt;
&lt;/ul&gt;
</description>
    </item>
    <item>
      <title>Devember Day 6</title>
      <link>http://gary.mcad.am/articles/devember-06/</link>
      <pubDate>Mon, 07 Dec 2015 01:32:58 +0000</pubDate>
      <guid isPermaLink="true">http://gary.mcad.am/articles/devember-06/</guid>
      <author></author>
      <description>&lt;p&gt;Today I decided to tackle the issue of having Browserify bundle my React/Babel/etc. files in less than 30 seconds.&lt;span class=&quot;more&quot;&gt;&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;And the results are in!&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;[01:26:13] Using gulpfile ~/Documents/Development/Bloon/gulpfile.js
[01:26:13] Starting &amp;#39;js&amp;#39;...
[01:26:13] Starting &amp;#39;sass&amp;#39;...
[01:26:13] Finished &amp;#39;sass&amp;#39; after 17 ms
[01:26:21] 2537121 bytes written (7.91 seconds)
[01:26:21] Finished &amp;#39;js&amp;#39; after 7.99 s
[01:26:21] Starting &amp;#39;default&amp;#39;...
[01:26:21] Finished &amp;#39;default&amp;#39; after 17 μs
&lt;/code&gt;&lt;/pre&gt;&lt;div class=&quot;img-responsive img-md&quot;&gt;
&lt;img src=&quot;/articles/devember-06/yay.gif&quot; alt=&quot;&quot;&gt;
&lt;/div&gt;

&lt;p&gt;&lt;em&gt;Woo!&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;OK so 8s still isn’t ideal. But it’s a lot better than 30. I can deal with that right now.&lt;/p&gt;
&lt;h2 id=&quot;introducing-watchify&quot;&gt;Introducing Watchify&lt;/h2&gt;
&lt;p&gt;After some digging, it turns out that the creators of Browserify, in realizing how slow Browserify can be, released &lt;a href=&quot;https://github.com/substack/watchify&quot;&gt;Watchify&lt;/a&gt; which helps to speed up the process… go figure.&lt;/p&gt;
&lt;p&gt;My gulp file is now a mess, so I’m going to investigate some ways to clean it up by writing my tasks as modules &amp;ndash; but that’s enough fiddling with gulp for now, the current gulp file should do for now as I’m hoping to get back to the actual job tomorrow evening.&lt;/p&gt;
&lt;h2 id=&quot;today-s-observations&quot;&gt;Today’s Observations&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;The auxiliary stuff surrounding development, such as setting up task runners and debugging them, tweaking them, is in my opinion the most tedious aspect of the job. I wish I could just remove it entirely.&lt;/li&gt;
&lt;li&gt;Stats for today: 1 commit, time spent 1h 20m 31s&lt;/li&gt;
&lt;/ul&gt;
</description>
    </item>
    <item>
      <title>Devember Day 5</title>
      <link>http://gary.mcad.am/articles/devember-05/</link>
      <pubDate>Sun, 06 Dec 2015 02:34:23 +0000</pubDate>
      <guid isPermaLink="true">http://gary.mcad.am/articles/devember-05/</guid>
      <author></author>
      <description>&lt;p&gt;Checking in from a hotel, still managed to get some stuff done! &lt;span class=&quot;more&quot;&gt;&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;After a night out drinking with a client from work, I wasn’t sure how functional I’d be (I have another family-related festive social gathering tomorrow so I’ve tried to stay as un-drunk as I can in anticipation of that).&lt;/p&gt;
&lt;p&gt;However, I’ve managed to stay awake and bring my laptop along to the hotel we’re staying at to check in.&lt;/p&gt;
&lt;p&gt;Not a very productive hour, touching up some of the UI and mostly waiting for my gulp tasks to run (30s per run now) &amp;ndash; tomorrow’s priority will &lt;em&gt;have&lt;/em&gt; to be to investigate making 
this more efficient!&lt;/p&gt;
&lt;div class=&quot;img-responsive img-xl img-cap&quot;&gt;
&lt;img src=&quot;/articles/devember-05/waiting.gif&quot; alt=&quot;&quot;&gt;
&lt;em&gt;Literally me irl sat in the hotel waiting 30s per build in gulp&lt;/em&gt;
&lt;/div&gt;

&lt;h2 id=&quot;today-s-observations&quot;&gt;Today’s Observations&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;Pizza + Beer + Coding = Fun! Someone should do this with more coordination on a larger scale…&lt;/li&gt;
&lt;li&gt;Premier Inn offer a free WiFi but it’s limited to 20 KB/s down, conveniently there’s an unlimited version of the exact same WiFi available for £5 for 24 hrs. Robbery. &lt;a href=&quot;http://www.reddit.com/r/firstworldproblems/&quot;&gt;#firstworldproblems&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;Stats for today: 1 commit, time spent 48 mins&lt;/li&gt;
&lt;/ul&gt;
</description>
    </item>
    <item>
      <title>Devember Day 4</title>
      <link>http://gary.mcad.am/articles/devember-04/</link>
      <pubDate>Sat, 05 Dec 2015 03:54:13 +0000</pubDate>
      <guid isPermaLink="true">http://gary.mcad.am/articles/devember-04/</guid>
      <author></author>
      <description>&lt;p&gt;Up late again, toying with ES6+React.&lt;span class=&quot;more&quot;&gt;&lt;/span&gt; Still
spending some time getting to grips with the details of React, but I’ve
managed to add some complexity.&lt;/p&gt;
&lt;p&gt;I’ve also expanded on my gulpfile, learned more about gulp in general
and spent a lot of time watching my stuff build &amp;ndash; Browserify can take
a while to build!&lt;/p&gt;
&lt;div class=&quot;img-responsive img-md img-border&quot;&gt;
    &lt;img src=&quot;/articles/devember-04/waiting.gif&quot; alt=&quot;&quot;&gt;
&lt;/div&gt;

&lt;h2 id=&quot;moving-forward-with-react&quot;&gt;Moving Forward with React&lt;/h2&gt;
&lt;p&gt;I’ve now managed to get a bit further with React, and I’m starting to
generate a slightly more complicated structure to my app. I now have 6-7
components and I’m doing some re-rendering based on events.&lt;/p&gt;
&lt;p&gt;I’m not sure if this is the best way to handle the process, or I should simply
let the browser redraw the page. This is something I’ll experiment with going
forward.&lt;/p&gt;
&lt;h2 id=&quot;gulp-newer-vs-gulp-changed&quot;&gt;gulp-newer vs gulp-changed&lt;/h2&gt;
&lt;p&gt;As someone who always preferred using &lt;code&gt;grunt-newer&lt;/code&gt; for my build processes,
moving to gulp was tricky. The community seems to prefer watch tasks.&lt;/p&gt;
&lt;p&gt;After comparing two packages, &lt;strong&gt;gulp-newer&lt;/strong&gt; and &lt;strong&gt;gulp-changed&lt;/strong&gt;, I’ve
settled on &lt;strong&gt;gulp-newer&lt;/strong&gt; as it allows you to check both 1:1 and many:1
differences.&lt;/p&gt;
&lt;h2 id=&quot;gulp-build-time-with-browserify&quot;&gt;Gulp Build Time with Browserify&lt;/h2&gt;
&lt;p&gt;I’m still struggling with a very very slow build time, around ~25s per build.&lt;/p&gt;
&lt;p&gt;This is due to the bundling of all files with Browserify, so I’m going to
investigate how to lower this down. Thankfully using &lt;strong&gt;gulp-newer&lt;/strong&gt; means this
will only run on any changes to my React, but still, it’s clumsy.&lt;/p&gt;
&lt;p&gt;Also, as an aside, I need to figure out how to properly pipe Browserify through
gulp, as my build output claims that gulp has finished compiling my JS before
Browserify actually starts. Bit odd.&lt;/p&gt;
&lt;h2 id=&quot;today-s-observations&quot;&gt;Today’s Observations&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;DEVEMBER BONUS!&lt;/strong&gt; I’ve spent some extra time this evening writing a small utility 
to help &lt;a href=&quot;http://gary.mcad.am/articles/vagrant-up&quot;&gt;manage vagrant machines a little better&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;Busy weekend planned, I’m going to try and get Day 5 done before going out, otherwise
I guess I’m taking my laptop with me for some alcohol induced coding!&lt;/li&gt;
&lt;li&gt;Stats for today: 1 commit, time spent 2h 57m 18s&lt;/li&gt;
&lt;/ul&gt;
</description>
    </item>
    <item>
      <title>Vagrant-Up</title>
      <link>http://gary.mcad.am/articles/vagrant-up/</link>
      <pubDate>Sat, 05 Dec 2015 03:53:40 +0000</pubDate>
      <guid isPermaLink="true">http://gary.mcad.am/articles/vagrant-up/</guid>
      <author></author>
      <description>&lt;p&gt;Do you run 1 vagrant machine at a time?&lt;span class=&quot;more&quot;&gt;&lt;/span&gt; Do you switch vagrant machines a lot? Is this frustrating for you?&lt;/p&gt;
&lt;p&gt;Well you should use &lt;a href=&quot;https://packagist.org/packages/gpmcadam/vagrant-up&quot;&gt;vagrant-up&lt;/a&gt; &amp;ndash; a lightweight utility to help manage one vagrant box at a time.&lt;/p&gt;
&lt;h2 id=&quot;installation&quot;&gt;Installation&lt;/h2&gt;
&lt;p&gt;Install via Composer:&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;$ composer global require gpmcadam/vagrant-up
&lt;/code&gt;&lt;/pre&gt;&lt;h2 id=&quot;usage&quot;&gt;Usage&lt;/h2&gt;
&lt;p&gt;After installation, simply run &lt;code&gt;vagrant-up&lt;/code&gt; in the directory of the vagrant box you want to bring up, and all other running vagrant machines will be suspended before bringing your desired machine up.&lt;/p&gt;
&lt;p&gt;Nifty, ey?!&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;/articles/vagrant-up/hat-wobble.gif&quot; alt=&quot;&quot;&gt;&lt;/p&gt;
</description>
    </item>
    <item>
      <title>Devember Day 3</title>
      <link>http://gary.mcad.am/articles/devember-03/</link>
      <pubDate>Thu, 03 Dec 2015 23:42:44 +0000</pubDate>
      <guid isPermaLink="true">http://gary.mcad.am/articles/devember-03/</guid>
      <author></author>
      <description>&lt;p&gt;I &amp;lt;3 React! &lt;span class=&quot;more&quot;&gt;&lt;/span&gt; Seriously, it’s great.&lt;/p&gt;
&lt;div class=&quot;img-responsive img-sm img-border&quot;&gt;
    &lt;img src=&quot;/articles/devember-03/tayne.gif&quot; alt=&quot;&quot;&gt;
&lt;/div&gt;

&lt;p&gt;It mixes really well with ES6, and while it takes a while to understand
the nuances, once you get to grips with it &amp;ndash; even a little &amp;ndash;
it pays off.&lt;/p&gt;
&lt;p&gt;Today was a very productive hour, which started with me reluctantly
opening my laptop in bed. I wasn’t very excited to carry on after
&lt;a href=&quot;http://gary.mcad.am/articles/devember-02&quot;&gt;last night’s fiasco&lt;/a&gt;, but I’ve made up for it today I think.&lt;/p&gt;
&lt;p&gt;I’ve not got a &lt;em&gt;huge&lt;/em&gt; amount done (just one small commit) but what’s
there has lead me to learn a lot about React and ES6.&lt;/p&gt;
&lt;h2 id=&quot;mocking-with-lumen&quot;&gt;Mocking with Lumen&lt;/h2&gt;
&lt;p&gt;&lt;a href=&quot;http://lumen.laravel.com&quot;&gt;Lumen&lt;/a&gt; (or rather Laravel, really) allows for very quick mocking of API
in the &lt;strong&gt;app/routes.php&lt;/strong&gt; file. I’ve got a simple API structure up and
running to serve out the data for the user profile selector: &lt;/p&gt;
&lt;pre&gt;&lt;code&gt;$app-&amp;gt;group([&amp;#39;prefix&amp;#39; =&amp;gt; &amp;#39;api/profile&amp;#39;], function () use ($app) {
    $app-&amp;gt;get(&amp;#39;/&amp;#39;, function() use($app) {
        return response()-&amp;gt;json([
                &amp;#39;profiles&amp;#39; =&amp;gt; [
                    [
                        &amp;#39;id&amp;#39; =&amp;gt; 1,
                        &amp;#39;name&amp;#39; =&amp;gt; &amp;#39;Arya&amp;#39;
                    ],
                    [
                        &amp;#39;id&amp;#39; =&amp;gt; 2,
                        &amp;#39;name&amp;#39; =&amp;gt; &amp;#39;Brandon&amp;#39;
                    ]
                ]
            ]);
    });
});
&lt;/code&gt;&lt;/pre&gt;&lt;h2 id=&quot;reactive-components&quot;&gt;Reactive Components&lt;/h2&gt;
&lt;p&gt;I now have a simple component structure set up in react, and I’m
rendering my profile selector like so:&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;// Bloon/ProfileSelect.jsx
import React from &amp;#39;react&amp;#39;;
import $ from &amp;#39;jquery&amp;#39;;
import Profile from &amp;#39;./Profile&amp;#39;;

class ProfileSelect extends React.Component {

    /**
     * ProfileSelect Constructor
     */
    constructor(props) {
        super(props)
        this.mounted = false;
        this.state = { profiles: [] };
    }

    /**
     * componentDidMount event handler - fetches
     * the component state via AJAX
     */
    componentDidMount() {
        this.mounted = true;
        Promise.resolve(
            $.get(&amp;#39;/api/profile/&amp;#39;)
        )
        .then(function(data) {
            if (this.mounted === true) {
                this.setState({
                    profiles: data.profiles
                })
            }
        }.bind(this))
        .catch(function(err) {
            console.log(err);
        });
    }

    /**
     * componentWillUnmount event handler
     */
    componentWillUnmount() {
        this.state = {};
        this.mounted = false;
    }

    /**
     * render handler
     */
    render() {
        return (
            &amp;lt;section className=&amp;quot;profiles&amp;quot;&amp;gt;{
                this.state.profiles.map(profile =&amp;gt; &amp;lt;Profile key={profile.id} profile={profile} /&amp;gt;)
            }
            &amp;lt;/section&amp;gt;
        )
    }
}

export default ProfileSelect;
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;In the above snippet, we consume our API method and keep
track of our component mount state. This means our
component state is handled asynchronously and allows it
to re-render cleanly whenever the AJAX returns.&lt;/p&gt;
&lt;p&gt;I’m not sure how efficient this is in the long term, I’ll need
to investigate ways to streamline the access of the data from
our PHP backend to React.&lt;/p&gt;
&lt;p&gt;The thing I was most excited to discover is in our render function:&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;render() {
    return (
        &amp;lt;section className=&amp;quot;profiles&amp;quot;&amp;gt;{
            this.state.profiles.map(profile =&amp;gt; &amp;lt;Profile key={profile.id} profile={profile} /&amp;gt;)
        }
        &amp;lt;/section&amp;gt;
    )
}
&lt;/code&gt;&lt;/pre&gt;&lt;div class=&quot;img-responsive img-md img-cap&quot; &gt;
    &lt;img src=&quot;/articles/devember-03/tasty.gif&quot; alt=&quot;&quot;&gt;
    &lt;em&gt;Tasty!&lt;/em&gt;
&lt;/div&gt;


&lt;p&gt;This is just &lt;em&gt;beautiful&lt;/em&gt; to me. In short, we render our
component as an HTML section element, and inside it
we map each of the profiles returning a Profile component.&lt;/p&gt;
&lt;p&gt;We do this so cleanly using &lt;a href=&quot;https://strongloop.com/strongblog/an-introduction-to-javascript-es6-arrow-functions/&quot;&gt;ES6 arrow functions&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;And our Profile component looks like this:&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;// Bloon/Profile.jsx
import React from &amp;#39;react&amp;#39;;

class Profile extends React.Component {
    render() {
        return &amp;lt;div&amp;gt;{this.props.profile.name}&amp;lt;/div&amp;gt;
    }
}

export default Profile;
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;In Chrome, using &lt;a href=&quot;https://chrome.google.com/webstore/detail/react-developer-tools/fmkadmapgofadopljbjfkapdkoienihi?hl=en&quot;&gt;React Developer Tools&lt;/a&gt;, we can can see our React
components in the virtual DOM:&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;/articles/devember-03/reactdom.png&quot; alt=&quot;&quot;&gt;&lt;/p&gt;
&lt;p&gt;It’s onwards and upwards from here. I’ll flesh out the UI in the
days to come which will give me a chance to mock the rest of the API.
Following that I’ll go back and fill in the gaps of the API and then
finalise the functionality.&lt;/p&gt;
&lt;h2 id=&quot;today-s-observations&quot;&gt;Today’s Observations&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;React and ES6 seem to work well but there’s lots of room for
improvement, this is apparent to me after only a few hours.&lt;/li&gt;
&lt;li&gt;Also, on React, I think they should take a leaf out of Meteor’s
books in terms of allowing more tightly coupled data bindings
with a backend API&lt;/li&gt;
&lt;li&gt;Shoutout to &lt;a href=&quot;http://browserify.org/&quot;&gt;Browserify&lt;/a&gt; and &lt;a href=&quot;https://github.com/babel/babelify&quot;&gt;Babelify&lt;/a&gt;
for making everything so easy! Starting to really appreciate its benefit now.&lt;/li&gt;
&lt;li&gt;Need to think about how to speed up build time with gulp. Hmm.&lt;/li&gt;
&lt;li&gt;Stats for today: 1 commit, time spent 1h 17m 28s&lt;/li&gt;
&lt;/ul&gt;
</description>
    </item>
    <item>
      <title>Devember Day 2</title>
      <link>http://gary.mcad.am/articles/devember-02/</link>
      <pubDate>Thu, 03 Dec 2015 01:47:39 +0000</pubDate>
      <guid isPermaLink="true">http://gary.mcad.am/articles/devember-02/</guid>
      <author></author>
      <description>&lt;p&gt;Day 2, and I’ve spent 4 hours this evening just fighting to get
ReactJS to compile to ES5. Maybe I can just skip the next 3 days
to compensate?&lt;span class=&quot;more&quot;&gt;&lt;/span&gt;&lt;/p&gt;
&lt;div class=&quot;img-responsive img-border img-md&quot;&gt;
    &lt;img src=&quot;/articles/devember-02/fngggg.gif&quot; alt=&quot;&quot;&gt;
&lt;/div&gt;

&lt;p&gt;That’s how I feel right now, anyway.&lt;/p&gt;
&lt;p&gt;I’m a huge fan of ReactJS and I’ve been desperate to use it on a project
for ages. Unfortunately ReactJS and its community are moving so
quickly that they haven’t stopped to document things properly
and because of how quick it’s changing, any community guides are already outdated.&lt;/p&gt;
&lt;p&gt;Tonight consisted of swapping and hacking between various combinations of
grunt, gulp, webpack, browserify, babel and react. I’m still not sure
what the best combination is &amp;ndash; nor that any of the above is even required
(seriously why is it so hard to get the default Hello World running using the
suggested method of &lt;code&gt;babel-cli&lt;/code&gt;?!)&lt;/p&gt;
&lt;p&gt;I’ve finally got everything running with the help of a friendly user in the
React IRC channel. But I’m a little dissuaded already.&lt;/p&gt;
&lt;p&gt;Sometimes there’s a comfort in being given a strict set of tools, and I wonder
if React needs time to settle on a way of pre-compilation. Right now it’s a bit
of a minefield.&lt;/p&gt;
&lt;p&gt;Anyway after many hours of frustration, I’ve ended up with a combination of:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;gulp&lt;/li&gt;
&lt;li&gt;babel&lt;/li&gt;
&lt;li&gt;babelify&lt;/li&gt;
&lt;li&gt;browserify&lt;/li&gt;
&lt;li&gt;react (+ react-dom)&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;I’m still getting to grips with what everything is, but it’s a real shame
to spend the evening bashing your head against the wall just trying to
get some JavaScript to pre-compile.&lt;/p&gt;
&lt;p&gt;For now, it’s rendering. So while I have 0 commits, I’m happy enough that
tomorrow at least I’ll get to write a line of code (hopefully!) or maybe
I’ll distract myself by implementing some of the UI instead.&lt;/p&gt;
&lt;h2 id=&quot;today-s-observations&quot;&gt;Today’s Observations&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;At the start of this project I decided to test out Atom. I had previously
been using Sublime Text 3 (which I use full time otherwise). My summary:
it’s a great idea and an amazing achievement, but I’m not sure it’s ready
to be used generally. I’ll revisit this editor in the future, but even for
this small side project, it’s not up to the task.
&lt;img src=&quot;/articles/devember-02/bye-bye-atom.jpg&quot; alt=&quot;&quot;&gt;&lt;/li&gt;
&lt;li&gt;Stats for today: 0 commits, time spent 4h&lt;/li&gt;
&lt;/ul&gt;
</description>
    </item>
    <item>
      <title>Devember Day 1</title>
      <link>http://gary.mcad.am/articles/devember-01/</link>
      <pubDate>Tue, 01 Dec 2015 23:03:56 +0000</pubDate>
      <guid isPermaLink="true">http://gary.mcad.am/articles/devember-01/</guid>
      <author></author>
      <description>&lt;p&gt;Day 1! I’ve managed to squeeze in 1 hour of development time this
evening&lt;span class=&quot;more&quot;&gt;&lt;/span&gt;, in which I’ve completed the following:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Setup the Lumen framework&lt;/li&gt;
&lt;li&gt;Configure Vagrant with Ubuntu and nginx&lt;/li&gt;
&lt;li&gt;Write and import the first set of database migrations&lt;/li&gt;
&lt;li&gt;I’ve now set up
&lt;a href=&quot;https://github.com/gpmcadam/bloon&quot;&gt;a public Github repository&lt;/a&gt;
to track the project&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Fairly productive hour; looking forward to working on seeding the database
and hopefully starting on the UI in the next couple of days. I’m eager to
try out Browsersync, since seeing
&lt;a href=&quot;https://www.youtube.com/watch?v=heNWfzc7ufQ&quot;&gt;a cool demo of it&lt;/a&gt; yesterday.&lt;/p&gt;
&lt;h2 id=&quot;today-s-observations&quot;&gt;Today’s Observations&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;It took me a while to get used to the small differences between Lumen
and Laravel. Mainly the lack of some
&lt;a href=&quot;http://laravel.com/docs/5.1/artisan&quot;&gt;&lt;strong&gt;artisan&lt;/strong&gt;&lt;/a&gt; commands that I’ve
grown used to (such as &lt;code&gt;key:generate&lt;/code&gt; and &lt;code&gt;tinker&lt;/code&gt;), and also that
certain aspects of the framework are disabled by default, including DotEnv,
and have to be enabled manually in &lt;code&gt;bootsrap/app.php&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;In my Googling today, a typo lead me to a genuine
&lt;a href=&quot;http://gary.mcad.am/articles/devember-01/%22https://en.wikipedia.org/wiki/Googlewhack%22&quot;&gt;Googlewhack!&lt;/a&gt;
&lt;img src=&quot;/articles/devember-01/googlewhack.jpg&quot; alt=&quot;&quot;&gt;&lt;/li&gt;
&lt;li&gt;Stats for today: 5 commits, time spent 1h 5m 10s&lt;/li&gt;
&lt;/ul&gt;
</description>
    </item>
    <item>
      <title>Devember as a conduit for escaping procrastination</title>
      <link>http://gary.mcad.am/articles/devember/</link>
      <pubDate>Fri, 27 Nov 2015 22:48:56 +0000</pubDate>
      <guid isPermaLink="true">http://gary.mcad.am/articles/devember/</guid>
      <author></author>
      <description>&lt;p&gt;So, I’ll be doing &lt;a href=&quot;http://devember.org/&quot;&gt;#Devember&lt;/a&gt; this year for the first time. What’s Devember?&lt;/p&gt;
&lt;p&gt;&lt;span class=&quot;more&quot;&gt;&lt;/span&gt;&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;Devember is a challenge you take up. It is an excuse for programming, for learning to code and for sharing it.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;The rules are simple: &lt;strong&gt;write code on a project every day in December.&lt;/strong&gt; There’s some extra bits about it being
publicly accessible and doing a daily dev blog &amp;ndash; I’ll do my best to adhere to these but honestly I’ll
be happy to simply write a commit every day.&lt;/p&gt;
&lt;p&gt;My personal goals for Devember are:&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;Explore some technologies on my list that I’ve not given myself time to&lt;/li&gt;
&lt;li&gt;Force me to continue work on a project I’ve been meaning to do in my spare time for a while&lt;/li&gt;
&lt;li&gt;Enable me to write about programming on my blog more often&lt;/li&gt;
&lt;/ol&gt;
&lt;h2 id=&quot;the-project&quot;&gt;The Project&lt;/h2&gt;
&lt;p&gt;The project is a toddler-friendly YouTube app I’ve had on my list for a while. It’s called &lt;strong&gt;Bloon&lt;/strong&gt; and it
looks&amp;ndash;or will look&amp;ndash;like this:&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;/articles/devember/bloon.png&quot; alt=&quot;&quot;&gt;&lt;/p&gt;
&lt;p&gt;The idea is that parents create playlists for their toddler to browse in a child-friendly user interface
with minimal clutter and simple interface elements. They “pop” a baloon of their favourite character
and off they go!&lt;/p&gt;
&lt;p&gt;The goal is ultimately to release this as a native app on iOS and Android, but for the first iteration
I’ll be writing it as an in-browser only experience.&lt;/p&gt;
&lt;h2 id=&quot;the-methodology&quot;&gt;The Methodology&lt;/h2&gt;
&lt;p&gt;I don’t anticipate having anything near a working prototype by the end of December, but I hope I’ll to be
most of the way there for my first version.&lt;/p&gt;
&lt;p&gt;I’ll be writing the web version in PHP using &lt;a href=&quot;http://lumen.laravel.com/&quot;&gt;Lumen&lt;/a&gt; to serve the API,
with a MySQL database and &lt;a href=&quot;https://facebook.github.io/react/&quot;&gt;React&lt;/a&gt; to handle handle rendering of the UI.&lt;/p&gt;
&lt;p&gt;I’m familiar with Laravel and MySQL but not Lumen or React with only minimal experience. So this will be
a great opportunity to explore these areas.&lt;/p&gt;
&lt;p&gt;The development stack will look something like this:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;Server Infrastructure:&lt;/strong&gt; Ubuntu + Vagrant + nginx&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Backend:&lt;/strong&gt; PHP + Lumen + MySQL&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Frontend:&lt;/strong&gt; Twitter Bootstrap + LESS + React&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&quot;follow-my-progress&quot;&gt;Follow My Progress&lt;/h2&gt;
&lt;p&gt;I’ll commit my work to &lt;a href=&quot;https://github.com/gpmcadam&quot;&gt;github&lt;/a&gt; and share information
about my progress as I go on this blog and give a brief summary in the New Year of how everything went.&lt;/p&gt;
&lt;p&gt;I’ve also started &lt;a href=&quot;https://trello.com/b/E0sJf6x3/bloon-devember&quot;&gt;a board on Trello&lt;/a&gt; to track my progress.&lt;/p&gt;
&lt;p&gt;I have a busy schedule this month, my guess is December is the most social month, even for hermits like me! So
I’m anticipating there’ll be some days where doing an hour of programming will be … difficult. I’ll share that, too.&lt;/p&gt;
&lt;p&gt;You can track my progress here, and in byte-sized snippets on &lt;a href=&quot;https://twitter.com/gpmcadam&quot;&gt;Twitter&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;Also, here’s the silly contract you’re meant to stick on your announcement:&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;I, Gary McAdam, will participate to the next Devember. My Devember will be Bloon (see above). I promise I will program for my Devember for at least an hour, every day of the next December. I will also write a daily public devlog and will make the produced code publicly available on the internet. No matter what, I will keep my promise. &lt;/p&gt;
&lt;/blockquote&gt;
</description>
    </item>
    <item>
      <title>Reddit Live Comments Chrome Extension</title>
      <link>http://gary.mcad.am/articles/chrome-reddit-live-comments/</link>
      <pubDate>Sat, 13 Jun 2015 14:12:01 +0100</pubDate>
      <guid isPermaLink="true">http://gary.mcad.am/articles/chrome-reddit-live-comments/</guid>
      <author></author>
      <description>&lt;p&gt;Update comment threads on reddit automatically with this Chrome Extension.&lt;/p&gt;
&lt;p&gt;&lt;span class=&quot;more&quot;&gt;&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;https://lh3.googleusercontent.com/fYxwrbAjFoDjGxFkDOacpP8bkG7SGjIm39rMjILryLLnswsj3CEhikRhabxLFIJEqcPjrJ4VDA=s640-h400-e365-rw&quot; alt=&quot;&quot;&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;https://chrome.google.com/webstore/detail/reddit-live/gfmgldfmppamhojkggjlonpboiobnbpe?hl=en-GB&amp;amp;gl=GB&quot;&gt;View the Extension&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://github.com/gpmcadam/chrome-reddit-live-comments&quot;&gt;View the Source Code on github&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&quot;how-to-install&quot;&gt;How to Install&lt;/h3&gt;
&lt;ol&gt;
&lt;li&gt;Install the extension&lt;/li&gt;
&lt;li&gt;Load a comment thread on &lt;a href=&quot;https://reddit.com&quot;&gt;&lt;em&gt;reddit&lt;/em&gt;&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;From the &lt;strong&gt;‘Sort By’&lt;/strong&gt; menu, sort comments by &lt;strong&gt;‘live’&lt;/strong&gt;&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;That’s it!&lt;/p&gt;
</description>
    </item>
  </channel>
</rss>